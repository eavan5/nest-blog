var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddArticleDTO.html",[0,0.014,1,2.099]],["body/classes/AddArticleDTO.html",[0,0.017,1,2.533,2,1.119,3,0.207,4,0.207,5,0.176,6,2.265,7,0.306,8,1.61,9,3.408,10,1.096,11,3.817,12,3.33,13,2.967,14,4.175,15,3.33,16,0.716,17,0.031,18,1.498,19,2.186,20,3.89,21,2.843,22,0.98,23,2.704,24,3.259,25,3.89,26,5.498,27,2.239,28,4.019,29,2.704,30,2.079,31,2.704,32,2.704,33,3.259,34,2.063,35,2.704,36,2.704,37,0.344,38,3.817,39,2.265,40,1.588,41,5.665,42,1.761,43,0.207,44,2.704,45,1.489,46,1.976,47,1.588,48,3.259,49,3.259,50,0.012,51,0.018,52,0.012]],["title/classes/AddMetaDTO.html",[0,0.014,53,2.099]],["body/classes/AddMetaDTO.html",[0,0.022,2,1.565,3,0.289,4,0.289,5,0.247,7,0.428,8,2.025,9,3.39,16,0.77,17,0.03,18,1.369,19,2.245,22,1.007,24,4.099,34,2.025,37,0.334,38,4.544,40,2.221,43,0.289,50,0.017,51,0.022,52,0.017,53,3.186,54,3.167,55,4.544,56,0.686,57,3.78,58,3.78,59,2.874,60,3.78,61,3.78,62,3.78,63,3.78,64,3.167]],["title/controllers/AppController.html",[65,1.334,66,2.099]],["body/controllers/AppController.html",[0,0.02,3,0.337,4,0.337,5,0.287,9,2.355,17,0.03,18,1.052,37,0.476,43,0.337,50,0.02,51,0.025,52,0.02,65,2.23,66,3.508,67,1.824,68,3.691,69,0.682,70,3.11,71,3.691,72,2.588,73,3.691,74,1.233,75,4.406]],["title/modules/AppModule.html",[76,1.139,77,2.099]],["body/modules/AppModule.html",[0,0.013,3,0.223,4,0.223,5,0.19,17,0.031,37,0.538,43,0.223,45,0.952,50,0.013,51,0.019,52,0.013,56,0.368,66,3.092,67,1.698,69,0.451,70,3.012,71,2.44,76,1.677,77,4.108,78,1.309,79,1.309,80,1.557,81,1.557,82,1.309,83,2.537,84,1.557,85,2.44,86,2.44,87,2.44,88,3.31,89,3.31,90,3.31,91,2.756,92,2.192,93,1.557,94,1.557,95,2.913,96,2.789,97,2.41,98,1.309,99,1.309,100,1.843,101,1.843,102,1.557,103,2.913,104,1.309,105,2.129,106,2.913,107,1.309,108,1.425,109,0.881,110,1.711,111,1.711,112,1.309,113,1.309,114,2.913,115,2.913,116,1.897,117,1.029,118,2.129,119,2.129,120,2.913,121,2.913,122,2.913,123,2.913,124,2.913,125,2.913,126,2.913,127,2.129]],["title/injectables/AppService.html",[70,1.723,128,0.547]],["body/injectables/AppService.html",[0,0.02,3,0.34,4,0.34,5,0.29,7,0.503,17,0.03,18,1.292,22,0.825,37,0.392,43,0.34,50,0.02,51,0.025,52,0.02,69,0.687,70,2.893,73,5.093,74,1.243,128,0.919,129,1.698,130,3.721,131,1.637,132,4.441,133,1.243,134,4.441,135,4.441]],["title/classes/Article.html",[0,0.014,136,1.576]],["body/classes/Article.html",[0,0.012,2,1.084,3,0.201,4,0.201,5,0.171,7,0.43,8,1.574,11,4.114,12,3.271,13,2.914,14,3.749,15,3.271,16,0.771,17,0.031,18,1.372,19,2.464,22,1.105,34,1.084,37,0.395,43,0.291,46,3.271,47,2.629,48,2.195,49,2.195,50,0.012,51,0.017,52,0.012,59,3.377,117,0.926,127,2.779,136,1.859,137,1.915,138,4.475,139,3.749,140,3.271,141,4.556,142,2.619,143,4.35,144,2.619,145,2.521,146,3.802,147,2.619,148,2.619,149,2.619,150,2.619,151,2.619,152,2.619,153,2.619,154,2.619,155,3.589,156,2.032,157,1.915,158,3.185,159,2.619,160,2.619,161,2.195,162,3.802,163,4.91,164,2.619,165,3.802,166,2.619,167,0.856,168,1.706,169,2.195]],["title/controllers/ArticleController.html",[65,1.334,170,2.099]],["body/controllers/ArticleController.html",[0,0.009,1,3.603,3,0.162,4,0.162,5,0.138,7,0.24,10,1.048,16,0.661,17,0.031,19,1.972,21,2.37,22,0.885,27,0.951,37,0.477,42,1.378,43,0.162,45,0.692,50,0.018,51,0.015,52,0.01,56,0.636,65,0.876,67,0.876,69,0.327,72,1.244,74,1.333,98,0.951,99,0.951,100,1.457,101,1.457,102,1.131,104,0.951,107,0.951,108,1.035,109,0.64,110,1.244,111,1.244,112,0.951,113,0.951,131,0.981,133,1.333,136,2.33,167,1.444,170,2.112,171,1.773,172,1.547,173,3.243,174,2.717,175,2.08,176,2.717,177,3.243,178,3.303,179,2.117,180,2.717,181,2.117,182,2.117,183,1.441,184,3.514,185,2.117,186,2.117,187,2.117,188,3.514,189,2.117,190,2.596,191,2.117,192,3.942,193,2.117,194,3.243,195,2.117,196,2.117,197,2.117,198,2.117,199,2.117,200,1.547,201,2.117,202,2.117,203,1.547,204,2.112,205,1.547,206,2.117,207,1.773,208,1.547,209,2.107,210,1.773,211,1.773,212,1.131,213,1.773,214,2.117,215,2.107,216,1.547,217,2.117,218,3.942,219,3.702,220,2.117,221,2.117,222,2.882,223,2.882,224,1.547,225,3.243,226,1.632,227,2.117,228,3.243,229,2.117,230,2.117,231,2.117,232,2.117,233,2.117,234,3.303,235,2.37,236,2.117,237,2.117,238,2.117,239,2.117,240,1.547,241,2.117,242,2.117,243,2.117,244,2.117]],["title/modules/ArticleModule.html",[76,1.139,88,1.894]],["body/modules/ArticleModule.html",[0,0.014,3,0.249,4,0.249,5,0.212,17,0.031,37,0.515,43,0.249,45,1.063,50,0.015,51,0.02,52,0.015,56,0.56,67,1.832,69,0.503,76,1.778,78,1.461,79,1.461,80,1.738,81,1.738,82,1.461,83,2.689,84,1.738,88,3.425,92,2.366,93,1.738,94,1.738,97,1.91,98,1.461,99,1.461,100,1.989,101,1.989,102,1.738,104,1.461,107,1.461,108,2.164,112,1.461,113,1.461,116,2.117,117,1.149,136,1.59,145,1.461,156,2.366,168,2.882,170,3.277,209,3.116,210,2.724,245,2.724,246,2.724,247,3.251,248,3.251,249,3.251,250,3.251,251,3.251,252,2.377,253,2.377,254,3.251,255,3.251,256,2.6,257,2.724,258,3.235,259,3.235,260,2.724,261,2.724]],["title/injectables/ArticleService.html",[128,0.547,209,1.723]],["body/injectables/ArticleService.html",[0,0.009,3,0.148,4,0.148,5,0.126,7,0.219,10,1.067,16,0.578,17,0.031,18,1.286,22,0.94,27,2.054,28,1.416,30,1.035,34,1.253,37,0.404,43,0.148,47,1.138,50,0.014,51,0.014,52,0.009,56,0.613,69,0.3,74,1.279,117,0.684,128,0.514,129,0.74,131,0.915,133,1.356,136,2.79,139,2.536,140,1.416,167,1.494,174,2.536,175,2.509,178,2.536,183,1.466,190,2.475,209,1.618,213,1.622,222,1.416,223,1.416,224,1.416,226,2.007,240,3.08,262,1.622,263,3.027,264,3.027,265,4.213,266,2.536,267,1.48,268,1.936,269,3.122,270,1.936,271,3.027,272,3.027,273,1.936,274,4.061,275,3.351,276,3.027,277,1.936,278,3.83,279,3.027,280,3.727,281,1.936,282,1.416,283,1.622,284,1.936,285,3.027,286,1.936,287,3.027,288,4.213,289,1.936,290,3.027,291,3.027,292,1.416,293,1.936,294,2.724,295,1.936,296,1.936,297,1.618,298,1.936,299,1.936,300,1.936,301,1.936,302,1.936,303,2.213,304,1.936,305,1.936,306,1.936,307,1.622,308,1.936,309,1.674,310,1.936,311,2.189,312,1.971,313,1.971,314,1.618,315,1.48,316,1.936,317,2.536,318,1.936,319,1.622,320,1.936,321,1.936,322,1.936,323,1.936,324,1.936,325,1.622]],["title/modules/AuthModule.html",[76,1.139,89,1.894]],["body/modules/AuthModule.html",[0,0.013,3,0.222,4,0.222,5,0.189,17,0.031,37,0.521,43,0.222,45,0.947,50,0.013,51,0.019,52,0.013,56,0.366,69,0.448,76,1.673,78,1.302,79,1.302,80,1.549,81,1.549,82,1.302,83,2.53,84,2.53,89,3.678,91,2.751,92,2.184,93,1.549,94,1.549,97,2.401,98,1.302,99,1.302,100,1.836,101,1.836,102,1.549,104,1.302,107,1.836,109,0.876,110,1.702,111,1.702,112,1.302,113,1.302,119,2.118,212,1.549,326,2.428,327,2.428,328,2.428,329,2.897,330,2.79,331,3.006,332,3.305,333,2.897,334,2.897,335,2.428,336,2.897,337,2.428,338,2.428,339,2.897,340,2.428,341,2.897,342,2.897,343,2.897,344,2.897,345,2.897,346,2.118,347,1.887,348,2.897,349,2.897,350,1.887,351,2.897,352,2.428,353,2.428,354,2.897,355,2.897,356,2.897,357,2.428]],["title/injectables/AuthService.html",[128,0.547,330,1.448]],["body/injectables/AuthService.html",[0,0.01,3,0.169,4,0.169,5,0.144,7,0.25,8,1.388,9,1.792,10,0.994,16,0.571,17,0.031,18,1.46,22,0.902,27,0.993,34,1.676,37,0.399,43,0.169,50,0.01,51,0.015,52,0.01,56,0.672,64,1.852,69,0.342,74,1.264,109,0.669,128,0.569,129,0.845,131,1.014,133,1.133,167,1.671,175,1.676,183,1.367,226,0.915,267,1.639,274,1.852,275,1.97,283,1.852,297,1.792,303,1.616,309,1.506,312,1.44,313,1.44,314,2.164,315,1.98,330,1.506,331,2.415,346,1.616,350,2.183,357,3.392,358,1.852,359,3.352,360,3.352,361,3.352,362,2.211,363,2.21,364,5.311,365,2.211,366,3.352,367,3.352,368,2.211,369,3.352,370,4.049,371,3.003,372,2.211,373,3.352,374,3.786,375,3.352,376,2.596,377,2.211,378,2.211,379,3.303,380,1.616,381,2.211,382,1.44,383,1.852,384,2.211,385,2.809,386,2.451,387,2.211,388,2.211,389,3.352,390,2.211,391,2.211,392,3.352,393,1.852,394,2.211,395,2.211,396,2.96,397,3.392,398,3.392,399,1.852,400,2.211,401,2.211,402,2.211,403,2.211]],["title/classes/HttpExceptionFilter.html",[0,0.014,404,2.356]],["body/classes/HttpExceptionFilter.html",[0,0.015,2,1.379,3,0.255,4,0.255,5,0.217,7,0.377,10,0.733,16,0.569,17,0.031,22,0.618,30,1.78,34,2.259,37,0.294,43,0.255,50,0.015,51,0.021,52,0.015,56,0.421,69,0.515,131,1.361,133,0.932,167,1.919,183,1.007,309,1.496,311,1.957,312,3.318,313,2.169,379,4.165,380,2.435,396,2.435,404,3.289,405,3.769,406,2.79,407,2.93,408,5.095,409,4.499,410,5.095,411,5.456,412,3.33,413,4.499,414,2.79,415,2.79,416,3.33,417,3.33,418,3.33,419,1.957,420,3.33,421,3.33,422,3.33,423,3.33,424,3.33,425,3.33,426,3.289,427,3.769,428,3.33,429,3.33,430,3.33,431,3.33,432,3.33,433,3.33,434,3.33,435,3.33,436,3.33,437,3.33]],["title/injectables/JwtStrategy.html",[128,0.547,331,1.723]],["body/injectables/JwtStrategy.html",[0,0.015,3,0.256,4,0.256,5,0.218,7,0.378,10,0.992,16,0.57,17,0.031,22,0.837,34,1.383,37,0.504,43,0.256,50,0.015,51,0.021,52,0.015,56,0.57,69,0.517,72,1.963,74,0.935,109,1.363,119,2.442,127,2.442,128,0.766,129,1.277,131,1.363,133,0.935,167,1.092,175,2.112,183,1.363,212,1.786,226,1.383,267,1.634,307,2.799,314,1.786,315,1.634,330,2.641,331,2.409,347,2.176,350,2.936,353,2.799,386,2.442,399,3.777,438,2.799,439,3.295,440,2.799,441,3.341,442,4.508,443,3.341,444,3.341,445,2.799,446,2.442,447,2.799,448,3.777,449,3.341,450,2.799,451,2.799,452,2.799,453,3.341,454,3.341,455,3.341,456,3.341,457,2.799,458,3.341,459,3.341,460,3.341,461,3.341,462,3.341]],["title/injectables/LocalStrategy.html",[128,0.547,332,1.894]],["body/injectables/LocalStrategy.html",[0,0.015,3,0.267,4,0.267,5,0.228,7,0.395,9,1.865,10,1.022,16,0.587,17,0.03,18,1.421,22,0.862,37,0.491,43,0.267,50,0.016,51,0.021,52,0.016,56,0.66,69,0.54,72,2.051,74,0.976,109,1.578,128,0.788,129,1.334,131,1.404,133,0.976,167,1.141,175,2.16,183,1.404,212,1.865,226,1.445,267,1.707,275,2.727,314,1.865,315,1.707,330,2.674,332,2.727,340,2.924,376,2.972,439,3.394,440,2.924,445,2.924,446,2.551,447,2.924,448,3.889,450,2.924,451,2.924,452,2.924,463,2.924,464,3.49,465,4.642,466,3.49,467,2.924,468,3.49]],["title/classes/Meta.html",[0,0.014,145,1.448]],["body/classes/Meta.html",[0,0.016,2,1.518,3,0.281,4,0.281,5,0.239,7,0.415,8,1.985,10,1.055,13,3.48,16,0.777,17,0.03,18,1.441,19,2.347,22,1.053,37,0.324,43,0.367,50,0.017,51,0.022,52,0.017,55,4.477,56,0.676,59,3.14,117,1.295,141,4.018,143,4.411,145,2.155,155,3.505,156,2.563,157,2.68,167,1.198,256,2.154,469,2.68,470,3.666,471,3.666,472,3.666,473,3.666,474,3.666,475,3.666,476,3.071]],["title/controllers/MetaController.html",[65,1.334,477,2.099]],["body/controllers/MetaController.html",[0,0.011,3,0.198,4,0.198,5,0.169,7,0.293,10,1.074,16,0.707,17,0.031,18,0.618,19,2.021,22,0.907,37,0.478,42,1.686,43,0.198,45,0.846,50,0.012,51,0.017,52,0.012,53,3.64,56,0.617,65,1.072,67,1.072,69,0.4,72,1.521,74,1.366,98,1.163,99,1.163,100,1.693,101,1.693,104,1.163,105,1.892,107,1.163,108,1.843,112,1.163,113,1.163,131,1.14,133,1.366,145,1.163,172,1.892,180,3.158,183,1.477,184,3.731,188,3.64,200,1.892,203,1.892,204,2.454,205,1.892,207,2.169,208,1.892,211,2.169,212,1.383,215,2.376,216,1.892,219,4.091,234,3.724,235,2.755,252,1.892,253,1.892,477,2.454,478,2.169,479,3.158,480,3.158,481,3.158,482,3.769,483,2.169,484,2.588,485,2.588,486,2.588,487,2.588,488,2.588,489,2.588,490,2.588,491,2.588,492,2.588,493,3.769,494,3.769,495,2.588,496,2.588,497,2.588,498,2.588,499,2.376,500,2.169,501,2.588,502,2.588,503,2.588,504,2.588,505,2.588,506,2.588,507,2.588,508,2.588,509,2.588,510,2.588,511,2.588,512,2.588]],["title/modules/MetaModule.html",[76,1.139,90,1.894]],["body/modules/MetaModule.html",[0,0.015,3,0.262,4,0.262,5,0.223,17,0.031,37,0.508,43,0.262,45,1.119,50,0.016,51,0.021,52,0.016,56,0.433,67,1.898,69,0.53,76,1.826,78,1.539,79,1.539,80,1.83,81,1.83,82,1.539,83,2.762,84,1.83,90,3.478,92,2.45,93,1.83,94,1.83,97,2.012,98,1.539,99,1.539,100,2.06,101,2.06,104,1.539,105,3.351,107,1.539,108,2.242,112,1.539,113,1.539,116,2.23,117,1.21,145,1.539,156,1.83,252,2.503,253,2.503,256,2.693,257,2.869,258,2.503,259,2.503,261,2.869,477,3.365,499,3.164,500,2.869,513,2.869,514,2.869,515,3.424,516,3.424,517,3.424,518,3.424,519,3.424]],["title/injectables/MetaService.html",[128,0.547,499,1.723]],["body/injectables/MetaService.html",[0,0.012,3,0.211,4,0.211,5,0.18,7,0.312,10,1.171,16,0.7,17,0.031,18,1.416,22,0.988,27,1.773,37,0.349,43,0.211,50,0.018,51,0.018,52,0.013,56,0.673,69,0.427,74,1.407,117,0.975,128,0.67,129,1.054,131,1.193,133,1.407,167,0.902,175,2.548,183,1.609,184,3.604,226,2.082,240,3.676,267,1.349,269,3.306,275,2.318,292,2.016,297,1.474,309,2.07,319,2.311,325,3.306,479,3.306,480,3.306,481,3.306,483,3.306,499,2.109,520,2.311,521,3.946,522,2.758,523,2.758,524,2.758,525,3.946,526,2.758,527,3.946,528,2.758,529,3.946,530,2.758,531,2.758,532,2.758,533,2.758,534,2.758,535,3.946,536,2.758]],["title/interfaces/Pagination.html",[190,1.894,537,1.723]],["body/interfaces/Pagination.html",[3,0.339,4,0.339,5,0.289,7,0.501,8,2.236,10,1.336,16,0.683,17,0.029,43,0.339,50,0.02,51,0.025,52,0.02,59,3.72,190,3.173,222,4.437,223,4.437,537,2.364,538,3.234,539,3.706]],["title/interfaces/Response.html",[419,1.894,537,1.723]],["body/interfaces/Response.html",[0,0.017,3,0.296,4,0.296,5,0.252,7,0.437,8,2.053,16,0.488,17,0.031,27,1.735,37,0.484,43,0.296,50,0.018,51,0.023,52,0.018,69,0.597,74,1.387,128,0.842,309,1.735,311,3.513,407,2.514,419,2.913,426,2.822,537,2.063,538,2.822,540,2.822,541,4.59,542,4.154,543,4.154,544,4.154,545,3.234,546,3.234,547,4.154,548,2.822,549,2.514,550,3.234,551,3.234,552,3.234,553,3.234,554,3.234]],["title/injectables/TransformInterceptor.html",[128,0.547,549,2.099]],["body/injectables/TransformInterceptor.html",[0,0.016,3,0.283,4,0.283,5,0.241,7,0.418,10,0.812,16,0.467,17,0.031,22,0.685,27,1.658,37,0.474,43,0.283,50,0.017,51,0.022,52,0.017,56,0.467,69,0.571,74,1.347,128,0.818,129,1.411,131,1.457,133,1.033,183,1.116,309,1.658,311,2.83,407,2.403,419,2.168,426,2.698,537,1.973,540,2.698,541,3.092,542,4.035,543,4.761,544,4.761,545,3.092,546,3.092,547,4.492,548,2.698,549,3.137,550,4.492,551,4.035,552,4.492,553,3.092,554,3.092,555,3.691,556,3.691]],["title/classes/User.html",[0,0.014,109,0.975]],["body/classes/User.html",[0,0.016,2,1.464,3,0.271,4,0.271,5,0.231,7,0.4,8,1.938,10,1.315,16,0.735,17,0.03,18,1.509,19,2.407,22,1.08,37,0.312,43,0.358,50,0.016,51,0.021,52,0.016,56,0.664,109,1.416,117,1.249,143,4.622,155,2.584,156,2.502,157,2.584,167,1.156,371,3.084,376,2.806,557,2.584,558,3.838,559,3.419,560,3.535,561,3.535,562,3.535,563,3.535,564,3.535,565,2.302,566,2.962]],["title/controllers/UserController.html",[65,1.334,96,1.894]],["body/controllers/UserController.html",[0,0.014,3,0.233,4,0.233,5,0.198,7,0.345,10,0.931,16,0.535,17,0.031,19,1.751,22,0.785,27,1.367,37,0.487,43,0.233,45,0.995,50,0.014,51,0.019,52,0.014,56,0.615,65,1.26,67,1.26,69,0.471,74,1.183,96,2.484,98,1.367,99,1.367,100,1.9,101,1.9,102,1.626,104,1.367,107,1.367,108,1.488,109,1.279,110,1.788,111,1.788,112,1.367,113,1.367,131,1.279,133,1.183,172,2.224,175,2.012,183,1.279,184,3.165,200,2.224,204,2.754,208,2.224,215,2.26,216,2.224,226,1.26,235,3.091,267,1.488,297,2.26,330,2.184,363,2.377,385,2.549,386,2.224,567,2.549,568,3.543,569,4.229,570,3.043,571,4.229,572,3.043,573,4.229,574,3.043,575,3.42,576,3.043,577,3.043,578,3.043,579,3.043,580,3.043,581,2.549,582,3.043,583,3.043,584,3.043,585,3.043,586,3.043,587,3.043,588,3.043,589,3.043,590,3.043]],["title/modules/UserModule.html",[76,1.139,91,1.576]],["body/modules/UserModule.html",[0,0.015,3,0.253,4,0.253,5,0.216,17,0.031,37,0.502,43,0.253,45,1.082,50,0.015,51,0.02,52,0.015,56,0.567,67,1.37,69,0.512,76,1.795,78,1.487,79,1.487,80,1.769,81,1.769,82,1.487,83,2.714,84,2.714,91,2.931,92,2.395,93,1.769,94,1.769,96,2.632,97,1.945,98,1.487,99,1.487,100,2.013,101,2.013,102,1.769,104,1.487,107,2.013,109,1.355,110,1.945,111,1.945,112,1.487,113,1.487,116,2.156,117,1.17,156,1.769,258,2.42,259,2.42,335,2.773,337,2.773,338,2.773,363,3.106,565,2.918,581,2.773,591,2.773,592,2.773,593,2.773,594,3.31,595,3.31,596,3.31,597,3.31,598,3.31,599,3.31,600,2.773]],["title/injectables/UserService.html",[128,0.547,363,1.576]],["body/injectables/UserService.html",[0,0.012,3,0.199,4,0.199,5,0.17,7,0.294,10,0.981,16,0.478,17,0.031,18,1.064,22,0.828,30,1.39,34,1.566,37,0.432,43,0.199,45,1.236,50,0.012,51,0.017,52,0.012,56,0.708,69,0.402,74,1.454,91,1.85,109,1.48,117,0.919,128,0.642,129,0.994,131,1.144,133,1.058,167,1.699,175,1.845,183,1.348,188,2.463,226,1.566,266,3.169,267,1.272,275,2.875,292,1.901,297,1.39,303,2.765,309,1.168,311,1.528,312,2.463,313,2.463,314,2.021,315,1.85,317,2.179,363,1.85,371,2.618,376,2.021,379,3.258,380,1.901,382,1.694,383,2.179,393,2.179,396,2.765,397,3.169,398,3.169,414,2.179,558,1.901,559,2.463,601,2.179,602,3.782,603,2.601,604,2.601,605,3.782,606,2.601,607,3.782,608,2.601,609,3.782,610,2.601,611,2.765,612,2.601,613,2.601,614,2.601,615,2.601,616,2.601,617,3.782,618,2.601,619,2.601]],["title/injectables/ValidationPipe.html",[128,0.547,215,1.723]],["body/injectables/ValidationPipe.html",[0,0.023,3,0.231,4,0.231,5,0.197,7,0.342,10,0.925,16,0.532,17,0.031,18,0.72,21,2.206,22,0.781,30,1.613,37,0.462,40,1.773,43,0.231,50,0.014,51,0.019,52,0.014,56,0.532,59,1.773,69,0.467,74,1.354,128,0.714,129,1.153,131,1.272,133,1.176,161,2.528,167,1.711,175,2.003,183,1.272,215,2.247,226,1.249,282,4.023,297,2.586,309,2.174,314,1.613,315,1.476,374,4.054,407,1.965,415,2.528,439,2.206,620,2.528,621,4.204,622,4.204,623,4.204,624,3.018,625,5.503,626,4.204,627,5.233,628,3.018,629,4.204,630,3.018,631,3.018,632,2.528,633,3.018,634,3.018,635,3.018,636,3.522,637,3.018,638,3.018,639,3.018,640,3.018,641,3.018,642,3.018,643,4.204,644,3.018,645,3.018,646,3.018]],["title/coverage.html",[647,3.216]],["body/coverage.html",[0,0.025,1,1.65,5,0.165,6,2.123,16,0.32,17,0.03,30,3.519,50,0.012,51,0.017,52,0.012,53,1.65,54,2.123,65,2.001,66,1.65,68,2.123,70,1.354,82,1.139,96,1.489,109,1.122,118,1.853,128,0.987,130,2.123,136,1.815,137,2.713,145,1.139,168,1.65,170,1.65,171,2.123,190,1.489,209,1.354,215,1.354,256,1.489,262,2.123,294,1.853,315,1.239,330,1.139,331,1.354,332,1.489,347,1.65,358,2.123,363,1.239,382,1.65,404,1.853,405,2.123,406,2.123,419,1.489,438,2.123,463,2.123,469,2.713,477,1.65,478,2.123,499,1.354,520,2.123,537,2.584,539,2.123,540,2.713,549,1.65,557,2.713,565,1.65,567,2.123,575,1.65,601,2.123,611,1.853,620,2.123,647,1.853,648,2.534,649,2.534,650,2.534,651,3.679,652,5.554,653,2.123,654,5.905,655,4.834,656,2.534,657,4.391,658,5.145,659,2.534,660,5.376,661,2.123,662,4.834,663,2.123,664,2.534,665,2.123,666,2.123,667,4.391,668,2.123,669,2.534,670,3.109,671,3.711,672,3.711,673,2.534,674,2.534]],["title/dependencies.html",[79,1.742,675,2.691]],["body/dependencies.html",[0,0.022,17,0.031,40,2.268,42,2.514,50,0.018,51,0.023,52,0.018,69,0.597,79,1.735,117,1.364,158,3.234,212,2.063,346,2.822,350,2.514,446,4.004,467,3.234,548,2.822,632,3.234,676,3.86,677,3.86,678,5.478,679,3.86,680,4.959,681,3.86,682,3.86,683,4.959,684,3.86,685,3.86,686,3.86,687,3.86,688,3.86,689,3.86,690,3.86,691,3.86,692,3.86,693,3.86,694,3.86,695,3.86,696,3.86,697,3.86,698,3.86,699,3.86,700,3.86,701,3.86,702,3.86,703,3.86,704,3.86,705,3.86]],["title/miscellaneous/functions.html",[706,1.753,707,3.248]],["body/miscellaneous/functions.html",[7,0.489,10,0.95,17,0.029,18,1.27,45,1.412,50,0.02,51,0.024,52,0.02,56,0.546,82,2.591,133,1.489,183,1.306,294,4.216,371,3.388,382,3.465,611,4.216,661,3.618,663,3.618,670,3.618,706,2.812,707,3.618,708,4.318,709,5.321,710,4.318,711,4.318,712,4.318,713,4.458,714,4.318]],["title/index.html",[7,0.305,715,2.691,716,2.691]],["body/index.html",[2,1.229,12,3.038,13,2.707,15,3.038,16,0.526,17,0.031,45,0.97,47,1.744,50,0.014,51,0.019,52,0.014,56,0.526,109,0.898,136,1.452,140,2.17,145,2.547,176,2.487,188,2.707,203,2.17,204,3.123,205,2.17,260,2.487,278,2.487,371,1.744,376,1.586,558,3.506,559,1.933,568,2.487,600,2.487,647,2.17,717,2.968,718,2.968,719,2.968,720,2.968,721,2.968,722,2.968,723,4.156,724,2.968,725,2.968,726,5.82,727,2.968,728,5.669,729,2.968,730,4.156,731,2.968,732,2.968,733,2.968,734,4.156,735,2.968,736,2.968,737,2.968,738,2.968,739,4.156,740,2.968,741,2.968,742,2.968,743,4.796,744,4.156,745,4.796,746,4.156,747,2.968,748,2.968,749,2.968,750,2.968,751,2.968,752,2.968,753,2.968,754,2.968,755,2.968,756,2.968,757,2.968,758,2.968,759,2.968,760,2.968,761,2.968,762,2.968,763,2.968]],["title/modules.html",[78,1.977]],["body/modules.html",[17,0.025,50,0.021,51,0.025,52,0.021,77,3.002,78,2.071,88,2.709,89,2.709,90,2.709,91,2.255,764,6.296,765,6.296,766,6.296,767,6.296]],["title/overview.html",[768,3.686]],["body/overview.html",[2,1.37,17,0.03,50,0.015,51,0.02,52,0.015,67,1.37,70,2.714,76,1.17,77,4.136,78,1.487,79,1.487,80,1.769,81,1.769,82,1.487,83,1.769,84,1.769,85,2.773,86,2.773,87,2.773,88,3.341,89,3.731,90,3.341,91,2.931,92,2.395,93,1.769,94,1.769,129,1.265,209,2.714,245,2.773,246,2.773,326,2.773,327,2.773,328,2.773,330,2.693,331,2.714,332,2.984,363,2.931,457,3.754,499,2.714,513,2.773,514,2.773,538,2.42,591,2.773,592,2.773,593,2.773,768,2.773,769,2.773,770,3.31,771,3.31]],["title/classes/userDTO.html",[0,0.014,575,2.099]],["body/classes/userDTO.html",[0,0.021,2,1.45,3,0.268,4,0.268,5,0.228,7,0.396,8,1.926,9,3.3,16,0.661,17,0.03,18,1.474,19,2.163,22,0.97,33,2.934,34,2.556,37,0.309,39,2.934,40,2.057,43,0.268,46,2.56,47,2.057,50,0.016,51,0.021,52,0.016,56,0.661,224,4.07,376,2.792,559,3.402,575,3.03,668,2.934,769,3.898,772,5.225,773,3.501,774,5.567,775,3.501,776,3.501,777,3.501,778,3.501,779,3.501,780,3.501]],["title/miscellaneous/variables.html",[706,1.753,781,3.248]],["body/miscellaneous/variables.html",[7,0.41,16,0.713,17,0.031,28,4.48,50,0.017,51,0.022,52,0.017,108,2.325,118,3.475,137,2.644,168,3.096,169,3.031,256,2.793,282,4.48,347,3.096,352,3.983,427,3.031,469,2.644,476,3.031,557,2.644,565,3.096,566,3.031,636,4.724,651,3.031,653,3.983,665,3.031,666,3.983,706,2.356,713,3.031,781,3.031,782,3.617,783,5.309,784,3.617,785,3.617,786,3.617,787,3.617,788,3.617,789,3.617,790,3.617,791,3.617,792,3.617,793,3.617,794,3.617]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":30,"title":{},"body":{"classes/AddArticleDTO.html":{},"injectables/ArticleService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["01:21:03",{"_index":596,"title":{},"body":{"modules/UserModule.html":{}}}],["02",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["02:22:36",{"_index":201,"title":{},"body":{"controllers/ArticleController.html":{}}}],["02:23:12",{"_index":497,"title":{},"body":{"controllers/MetaController.html":{}}}],["02:24:13",{"_index":579,"title":{},"body":{"controllers/UserController.html":{}}}],["03",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["04",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{}}}],["05",{"_index":249,"title":{},"body":{"modules/ArticleModule.html":{}}}],["06",{"_index":200,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}}}],["1",{"_index":27,"title":{},"body":{"classes/AddArticleDTO.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{}}}],["1.0.0",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":224,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/userDTO.html":{}}}],["100",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["10:59:57",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["123456",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12:04:38",{"_index":248,"title":{},"body":{"modules/ArticleModule.html":{}}}],["12:05:04",{"_index":199,"title":{},"body":{"controllers/ArticleController.html":{}}}],["13:50:05",{"_index":250,"title":{},"body":{"modules/ArticleModule.html":{}}}],["15:02:43",{"_index":595,"title":{},"body":{"modules/UserModule.html":{}}}],["15:03:02",{"_index":578,"title":{},"body":{"controllers/UserController.html":{}}}],["16:49:47",{"_index":516,"title":{},"body":{"modules/MetaModule.html":{}}}],["16:54:00",{"_index":496,"title":{},"body":{"controllers/MetaController.html":{}}}],["17.1.1",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["19:18:50",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["1是tag，2是category",{"_index":475,"title":{},"body":{"classes/Meta.html":{}}}],["2",{"_index":64,"title":{},"body":{"classes/AddMetaDTO.html":{},"injectables/AuthService.html":{}}}],["20",{"_index":44,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["20'})@apiproperty({description",{"_index":35,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["2021",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["21:35:40",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["22:02:39",{"_index":517,"title":{},"body":{"modules/MetaModule.html":{}}}],["23:03:44",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["3.0.2",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30d",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["4",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{},"overview.html":{}}}],["4.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["4.7.9",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["5",{"_index":769,"title":{},"body":{"overview.html":{},"classes/userDTO.html":{}}}],["5.11.9",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["5位'})@maxlength(10",{"_index":777,"title":{},"body":{"classes/userDTO.html":{}}}],["5位'})@maxlength(20",{"_index":775,"title":{},"body":{"classes/userDTO.html":{}}}],["6.6.3",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":771,"title":{},"body":{"overview.html":{}}}],["7.1.5",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":436,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["9",{"_index":770,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":240,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/MetaService.html":{}}}],["_id:id",{"_index":761,"title":{},"body":{"index.html":{}}}],["_id:分类id",{"_index":758,"title":{},"body":{"index.html":{}}}],["_id:文章id",{"_index":748,"title":{},"body":{"index.html":{}}}],["_id:用户id",{"_index":756,"title":{},"body":{"index.html":{}}}],["_id:评论id",{"_index":754,"title":{},"body":{"index.html":{}}}],["add_time",{"_index":46,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{},"classes/userDTO.html":{}}}],["addarticle",{"_index":173,"title":{},"body":{"controllers/ArticleController.html":{}}}],["addarticle(@body",{"_index":236,"title":{},"body":{"controllers/ArticleController.html":{}}}],["addarticle(body",{"_index":179,"title":{},"body":{"controllers/ArticleController.html":{}}}],["addarticledto",{"_index":1,"title":{"classes/AddArticleDTO.html":{}},"body":{"classes/AddArticleDTO.html":{},"controllers/ArticleController.html":{},"coverage.html":{}}}],["adddata",{"_index":263,"title":{},"body":{"injectables/ArticleService.html":{}}}],["adddata(params",{"_index":272,"title":{},"body":{"injectables/ArticleService.html":{}}}],["addmeta",{"_index":479,"title":{},"body":{"controllers/MetaController.html":{},"injectables/MetaService.html":{}}}],["addmeta(@body",{"_index":505,"title":{},"body":{"controllers/MetaController.html":{}}}],["addmeta(body",{"_index":483,"title":{},"body":{"controllers/MetaController.html":{},"injectables/MetaService.html":{}}}],["addmetadto",{"_index":53,"title":{"classes/AddMetaDTO.html":{}},"body":{"classes/AddMetaDTO.html":{},"controllers/MetaController.html":{},"coverage.html":{}}}],["admin",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":55,"title":{},"body":{"classes/AddMetaDTO.html":{},"classes/Meta.html":{}}}],["api",{"_index":740,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":219,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{}}}],["apibody",{"_index":218,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apiproperty",{"_index":41,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["apiproperty({description",{"_index":25,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["apiproperty({type",{"_index":20,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["app.config",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["app.controller",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":66,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":434,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["appmodule",{"_index":77,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":70,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":627,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":411,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":161,"title":{},"body":{"classes/Article.html":{},"injectables/ValidationPipe.html":{}}}],["arraynotempty",{"_index":164,"title":{},"body":{"classes/Article.html":{}}}],["arrayunique",{"_index":49,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{}}}],["article",{"_index":136,"title":{"classes/Article.html":{}},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"index.html":{}}}],["article.controller",{"_index":254,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.dto",{"_index":217,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.model",{"_index":295,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.service",{"_index":210,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article_id:文章id",{"_index":762,"title":{},"body":{"index.html":{}}}],["articlecontroller",{"_index":170,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articlelist",{"_index":225,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articlemodel",{"_index":271,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlemodule",{"_index":88,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articles",{"_index":260,"title":{},"body":{"modules/ArticleModule.html":{},"index.html":{}}}],["articleschema",{"_index":168,"title":{},"body":{"classes/Article.html":{},"modules/ArticleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleservice",{"_index":209,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":175,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["auth",{"_index":745,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth.service.js",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth/auth.service",{"_index":582,"title":{},"body":{"controllers/UserController.html":{}}}],["authguard",{"_index":211,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{}}}],["authmodule",{"_index":89,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["author_id",{"_index":138,"title":{},"body":{"classes/Article.html":{}}}],["author_id:作者id",{"_index":749,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":330,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["auth的接口表示需要token认证,token默认有效期为30",{"_index":741,"title":{},"body":{"index.html":{}}}],["await",{"_index":226,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception",{"_index":630,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(`validation",{"_index":644,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["blog/src/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["blog/src/module/article/article.controller.ts",{"_index":202,"title":{},"body":{"controllers/ArticleController.html":{}}}],["blog/src/module/article/article.module.ts",{"_index":251,"title":{},"body":{"modules/ArticleModule.html":{}}}],["blog/src/module/auth/auth.module.ts",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["blog/src/module/meta/meta.controller.ts",{"_index":498,"title":{},"body":{"controllers/MetaController.html":{}}}],["blog/src/module/meta/meta.module.ts",{"_index":518,"title":{},"body":{"modules/MetaModule.html":{}}}],["blog/src/module/user/user.controller.ts",{"_index":580,"title":{},"body":{"controllers/UserController.html":{}}}],["blog/src/module/user/user.module.ts",{"_index":597,"title":{},"body":{"modules/UserModule.html":{}}}],["body",{"_index":184,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"controllers/UserController.html":{}}}],["body(article:article",{"_index":744,"title":{},"body":{"index.html":{}}}],["body({name:string,passwd:string",{"_index":746,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":767,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":764,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":543,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["catch",{"_index":312,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":409,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":416,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["category",{"_index":165,"title":{},"body":{"classes/Article.html":{}}}],["category_id",{"_index":11,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{}}}],["category_id:文章分类id",{"_index":750,"title":{},"body":{"index.html":{}}}],["certificate",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["certificate(params",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["changemeta",{"_index":480,"title":{},"body":{"controllers/MetaController.html":{},"injectables/MetaService.html":{}}}],["changemeta(@param",{"_index":511,"title":{},"body":{"controllers/MetaController.html":{}}}],["changemeta(_id",{"_index":525,"title":{},"body":{"injectables/MetaService.html":{}}}],["changemeta(param",{"_index":486,"title":{},"body":{"controllers/MetaController.html":{}}}],["charset=utf",{"_index":435,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"classes/HttpExceptionFilter.html":{},"classes/Meta.html":{},"classes/User.html":{},"classes/userDTO.html":{}},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"classes/userDTO.html":{}}}],["class_id:分类id",{"_index":763,"title":{},"body":{"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"classes/HttpExceptionFilter.html":{},"classes/Meta.html":{},"classes/User.html":{},"index.html":{},"overview.html":{},"classes/userDTO.html":{}}}],["cluster_appmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":245,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":246,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_metamodule",{"_index":513,"title":{},"body":{"modules/MetaModule.html":{},"overview.html":{}}}],["cluster_metamodule_providers",{"_index":514,"title":{},"body":{"modules/MetaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":591,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":592,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":593,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":426,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["collection",{"_index":259,"title":{},"body":{"modules/ArticleModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{}}}],["commons",{"_index":753,"title":{},"body":{"index.html":{}}}],["compression",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["config_g",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect_id:关联的文章id",{"_index":755,"title":{},"body":{"index.html":{}}}],["console.log('jwt",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["console.log(11",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(22",{"_index":323,"title":{},"body":{"injectables/ArticleService.html":{}}}],["console.log(`value",{"_index":634,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["console.log(data",{"_index":317,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["console.log(payload",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(result",{"_index":325,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/MetaService.html":{}}}],["console.log(user",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["const",{"_index":167,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"injectables/MetaService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":267,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('meta",{"_index":531,"title":{},"body":{"injectables/MetaService.html":{}}}],["constructor(@injectmodel('user",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(articlemodel",{"_index":268,"title":{},"body":{"injectables/ArticleService.html":{}}}],["constructor(authservice",{"_index":440,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(metamodel",{"_index":522,"title":{},"body":{"injectables/MetaService.html":{}}}],["constructor(private",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{}}}],["constructor(usermodule",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":12,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{},"index.html":{}}}],["context",{"_index":551,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":65,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('article",{"_index":220,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('meta",{"_index":502,"title":{},"body":{"controllers/MetaController.html":{}}}],["controller('user",{"_index":584,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":647,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create_time",{"_index":558,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ctx",{"_index":417,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":422,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":420,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":311,"title":{},"body":{"injectables/ArticleService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{}}}],["database",{"_index":747,"title":{},"body":{"index.html":{}}}],["date",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["date.now",{"_index":322,"title":{},"body":{"injectables/ArticleService.html":{}}}],["date.now().tostring",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/userDTO.html":{}}}],["default",{"_index":28,"title":{},"body":{"classes/AddArticleDTO.html":{},"injectables/ArticleService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/userDTO.html":{}}}],["delete",{"_index":203,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"index.html":{}}}],["delete(':_id",{"_index":507,"title":{},"body":{"controllers/MetaController.html":{}}}],["delete(':id",{"_index":242,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletearticle",{"_index":174,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["deletearticle(@param",{"_index":243,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletearticle(id",{"_index":276,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deletearticle(param",{"_index":185,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletemeta",{"_index":481,"title":{},"body":{"controllers/MetaController.html":{},"injectables/MetaService.html":{}}}],["deletemeta(@param",{"_index":508,"title":{},"body":{"controllers/MetaController.html":{}}}],["deletemeta(_id",{"_index":527,"title":{},"body":{"injectables/MetaService.html":{}}}],["deletemeta(param",{"_index":489,"title":{},"body":{"controllers/MetaController.html":{}}}],["dependencies",{"_index":79,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":13,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{},"classes/Meta.html":{},"index.html":{}}}],["description",{"_index":45,"title":{},"body":{"classes/AddArticleDTO.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["document",{"_index":738,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["edit",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["email",{"_index":559,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"index.html":{},"classes/userDTO.html":{}}}],["email：邮箱（头像使用gravatar",{"_index":757,"title":{},"body":{"index.html":{}}}],["encrypt",{"_index":712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptionpassword",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["encryptpassword",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encryptpassword(passwd",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["encryptpassword(password",{"_index":711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptpassword(plaintextpassword",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":313,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["error.message",{"_index":320,"title":{},"body":{"injectables/ArticleService.html":{}}}],["errorresponse",{"_index":425,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":638,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":640,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["exception",{"_index":413,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":406,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":412,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":430,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":423,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":408,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":544,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["expiresin",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/userDTO.html":{}}}],["exports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":450,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":643,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":307,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/JwtStrategy.html":{}}}],["fields",{"_index":280,"title":{},"body":{"injectables/ArticleService.html":{}}}],["fields).sort",{"_index":300,"title":{},"body":{"injectables/ArticleService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"classes/userDTO.html":{}}}],["filepath",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["findall",{"_index":264,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findall(params",{"_index":279,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findcount",{"_index":265,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findone",{"_index":266,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["findone(id",{"_index":285,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findone(name",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":707,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':_id",{"_index":194,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':type",{"_index":494,"title":{},"body":{"controllers/MetaController.html":{}}}],["getdefaultoptions",{"_index":294,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gethello",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmeta",{"_index":521,"title":{},"body":{"injectables/MetaService.html":{}}}],["getmeta(type",{"_index":529,"title":{},"body":{"injectables/MetaService.html":{}}}],["getmta",{"_index":482,"title":{},"body":{"controllers/MetaController.html":{}}}],["getmta(@param",{"_index":503,"title":{},"body":{"controllers/MetaController.html":{}}}],["getmta(param",{"_index":492,"title":{},"body":{"controllers/MetaController.html":{}}}],["getting",{"_index":715,"title":{"index.html":{}},"body":{}}],["hapi/joi",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["hashedpassword",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpasswd",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":139,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{}}}],["hidden:是否隐藏(0是显示,默认是1",{"_index":752,"title":{},"body":{"index.html":{}}}],["host",{"_index":410,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":418,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpexceptionfilter",{"_index":404,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://www.wumao.org",{"_index":253,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{}}}],["httpstatus",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpstatus.forbidden",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["httpstatus.internal_server_error",{"_index":431,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["id",{"_index":278,"title":{},"body":{"injectables/ArticleService.html":{},"index.html":{}}}],["id(目前用的是自带主键id",{"_index":720,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":407,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/userDTO.html":{}}}],["imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{}}}],["inc",{"_index":305,"title":{},"body":{"injectables/ArticleService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/userDTO.html":{}}}],["injectable",{"_index":128,"title":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":292,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/MetaService.html":{},"injectables/UserService.html":{}}}],["injectmodel('article",{"_index":296,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectmodel('meta",{"_index":298,"title":{},"body":{"injectables/ArticleService.html":{}}}],["installdevelopment",{"_index":727,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":429,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["intercept",{"_index":550,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":555,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":537,"title":{"interfaces/Pagination.html":{},"interfaces/Response.html":{}},"body":{"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interface/article.interface",{"_index":293,"title":{},"body":{"injectables/ArticleService.html":{}}}],["interface/pagination.interface",{"_index":213,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["interface/user.interface",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaces",{"_index":538,"title":{},"body":{"interfaces/Pagination.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["isarray",{"_index":48,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{}}}],["isemail",{"_index":772,"title":{},"body":{"classes/userDTO.html":{}}}],["isin",{"_index":62,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["isin([1",{"_index":63,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["isin(undefined",{"_index":60,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["isnotempty",{"_index":38,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{}}}],["isnotempty({message",{"_index":24,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{}}}],["items",{"_index":230,"title":{},"body":{"controllers/ArticleController.html":{}}}],["jwt",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.secret",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtconfig",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":331,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lasteditors",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["lastedittime",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["legend",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["list",{"_index":176,"title":{},"body":{"controllers/ArticleController.html":{},"index.html":{}}}],["list(@query",{"_index":221,"title":{},"body":{"controllers/ArticleController.html":{}}}],["list(queryinfo",{"_index":189,"title":{},"body":{"controllers/ArticleController.html":{}}}],["literal",{"_index":493,"title":{},"body":{"controllers/MetaController.html":{}}}],["local",{"_index":467,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":332,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":415,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["logger.error(`validation",{"_index":642,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["logger.log",{"_index":424,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["login",{"_index":568,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["login(@body",{"_index":587,"title":{},"body":{"controllers/UserController.html":{}}}],["login(logininfo",{"_index":570,"title":{},"body":{"controllers/UserController.html":{}}}],["logininfo",{"_index":573,"title":{},"body":{"controllers/UserController.html":{}}}],["logininfo.name",{"_index":589,"title":{},"body":{"controllers/UserController.html":{}}}],["logininfo.passwd",{"_index":590,"title":{},"body":{"controllers/UserController.html":{}}}],["make",{"_index":714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesalt",{"_index":611,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":545,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map(data",{"_index":554,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":39,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/userDTO.html":{}}}],["maxlength(10",{"_index":780,"title":{},"body":{"classes/userDTO.html":{}}}],["maxlength(20",{"_index":33,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/userDTO.html":{}}}],["message",{"_index":34,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"classes/userDTO.html":{}}}],["meta",{"_index":145,"title":{"classes/Meta.html":{}},"body":{"classes/Article.html":{},"modules/ArticleModule.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"coverage.html":{},"index.html":{}}}],["meta.controller",{"_index":519,"title":{},"body":{"modules/MetaModule.html":{}}}],["meta.dto",{"_index":501,"title":{},"body":{"controllers/MetaController.html":{}}}],["meta.schema",{"_index":159,"title":{},"body":{"classes/Article.html":{}}}],["meta.service",{"_index":500,"title":{},"body":{"controllers/MetaController.html":{},"modules/MetaModule.html":{}}}],["metacontroller",{"_index":477,"title":{"controllers/MetaController.html":{}},"body":{"controllers/MetaController.html":{},"modules/MetaModule.html":{},"coverage.html":{}}}],["metadata",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["metamodel",{"_index":269,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/MetaService.html":{}}}],["metamodule",{"_index":90,"title":{"modules/MetaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MetaModule.html":{},"modules.html":{},"overview.html":{}}}],["metas",{"_index":261,"title":{},"body":{"modules/ArticleModule.html":{},"modules/MetaModule.html":{}}}],["metaschema",{"_index":256,"title":{},"body":{"modules/ArticleModule.html":{},"classes/Meta.html":{},"modules/MetaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metaservice",{"_index":499,"title":{"injectables/MetaService.html":{}},"body":{"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"coverage.html":{},"overview.html":{}}}],["metatype",{"_index":625,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["meta查看(根据type",{"_index":718,"title":{},"body":{"index.html":{}}}],["methods",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["minimum",{"_index":26,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["minlength",{"_index":779,"title":{},"body":{"classes/userDTO.html":{}}}],["minlength(5",{"_index":774,"title":{},"body":{"classes/userDTO.html":{}}}],["miscellaneous",{"_index":706,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":730,"title":{},"body":{"index.html":{}}}],["module",{"_index":76,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module/article/article.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/auth.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["module/meta/meta.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user.controller",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":78,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo_db",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":724,"title":{},"body":{"index.html":{}}}],["mongodb://127.0.0.1:27017/nestblog",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb://admin:123456@localhost:27017/nestblog?authsource=admin",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":158,"title":{},"body":{"classes/Article.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":162,"title":{},"body":{"classes/Article.html":{}}}],["mongoosemodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":258,"title":{},"body":{"modules/ArticleModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(mongo_db.url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["msg",{"_index":309,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["name",{"_index":56,"title":{},"body":{"classes/AddMetaDTO.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/userDTO.html":{}}}],["nest",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["nestinterceptor",{"_index":542,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":722,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Meta.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":212,"title":{},"body":{"controllers/ArticleController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":42,"title":{},"body":{"classes/AddArticleDTO.html":{},"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"dependencies.html":{}}}],["new",{"_index":315,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":552,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":553,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nodejs搭建的博客系统,不断完善中,部分数据库设计借鉴php程序typecho",{"_index":717,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":290,"title":{},"body":{"injectables/ArticleService.html":{}}}],["notfoundexception",{"_index":291,"title":{},"body":{"injectables/ArticleService.html":{}}}],["npm",{"_index":726,"title":{},"body":{"index.html":{}}}],["number",{"_index":59,"title":{},"body":{"classes/AddMetaDTO.html":{},"classes/Article.html":{},"classes/Meta.html":{},"interfaces/Pagination.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":636,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["object.values(errors[0].constraints)[0",{"_index":641,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["observable",{"_index":547,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/AddArticleDTO.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["oss存储+cdn",{"_index":721,"title":{},"body":{"index.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":768,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":675,"title":{"dependencies.html":{}},"body":{}}],["pagecurrent",{"_index":222,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"interfaces/Pagination.html":{}}}],["pageinfo",{"_index":231,"title":{},"body":{"controllers/ArticleController.html":{}}}],["pagesize",{"_index":223,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"interfaces/Pagination.html":{}}}],["pagesize).limit(+pagesize",{"_index":302,"title":{},"body":{"injectables/ArticleService.html":{}}}],["pagination",{"_index":190,"title":{"interfaces/Pagination.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["param",{"_index":188,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["param(_id:string",{"_index":743,"title":{},"body":{"index.html":{}}}],["param.id",{"_index":241,"title":{},"body":{"controllers/ArticleController.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":274,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["params.name",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.passwd",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["params2",{"_index":288,"title":{},"body":{"injectables/ArticleService.html":{}}}],["passport",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":451,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{},"classes/userDTO.html":{}}}],["password",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.passwd",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipe",{"_index":719,"title":{},"body":{"index.html":{}}}],["pipe/validation.pipe",{"_index":216,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}}}],["pipetransform",{"_index":629,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintextpassword",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["plaintoclass",{"_index":631,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":637,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["populate('category_id').populate('tag_id",{"_index":308,"title":{},"body":{"injectables/ArticleService.html":{}}}],["port",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":204,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["post('/login",{"_index":571,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":172,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":297,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/MetaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["promise",{"_index":275,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/MetaService.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":155,"title":{},"body":{"classes/Article.html":{},"classes/Meta.html":{},"classes/User.html":{}}}],["prop(array",{"_index":160,"title":{},"body":{"classes/Article.html":{}}}],["prop(number",{"_index":141,"title":{},"body":{"classes/Article.html":{},"classes/Meta.html":{}}}],["prop(string",{"_index":143,"title":{},"body":{"classes/Article.html":{},"classes/Meta.html":{},"classes/User.html":{}}}],["prop(undefined",{"_index":146,"title":{},"body":{"classes/Article.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"injectables/AuthService.html":{},"classes/Meta.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"classes/User.html":{},"classes/userDTO.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":205,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"index.html":{}}}],["put(':_id",{"_index":510,"title":{},"body":{"controllers/MetaController.html":{}}}],["put(':id",{"_index":238,"title":{},"body":{"controllers/ArticleController.html":{}}}],["query",{"_index":206,"title":{},"body":{"controllers/ArticleController.html":{}}}],["query({pagesize=10,pagecurrent=1",{"_index":742,"title":{},"body":{"index.html":{}}}],["queryinfo",{"_index":192,"title":{},"body":{"controllers/ArticleController.html":{}}}],["readarticle",{"_index":177,"title":{},"body":{"controllers/ArticleController.html":{}}}],["readarticle(@param",{"_index":232,"title":{},"body":{"controllers/ArticleController.html":{}}}],["readarticle(param",{"_index":193,"title":{},"body":{"controllers/ArticleController.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/userDTO.html":{}}}],["ref",{"_index":163,"title":{},"body":{"classes/Article.html":{}}}],["reflect",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":569,"title":{},"body":{"controllers/UserController.html":{}}}],["register(@body",{"_index":585,"title":{},"body":{"controllers/UserController.html":{}}}],["register(body",{"_index":574,"title":{},"body":{"controllers/UserController.html":{}}}],["registeruser",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser(requestbody",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["relationships",{"_index":760,"title":{},"body":{"index.html":{}}}],["request",{"_index":421,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.originalurl",{"_index":428,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["requestbody",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":166,"title":{},"body":{"classes/Article.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":419,"title":{"interfaces/Response.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.header('content",{"_index":433,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.send(errorresponse",{"_index":437,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status",{"_index":432,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restful",{"_index":739,"title":{},"body":{"index.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["result.deletedcount",{"_index":535,"title":{},"body":{"injectables/MetaService.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":728,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":548,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":546,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["salt",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sameinfo",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["sameinfo.length",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["save",{"_index":319,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/MetaService.html":{}}}],["schema",{"_index":156,"title":{},"body":{"classes/Article.html":{},"modules/ArticleModule.html":{},"classes/Meta.html":{},"modules/MetaModule.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["schema/article.schema",{"_index":255,"title":{},"body":{"modules/ArticleModule.html":{}}}],["schema/meta.schema",{"_index":257,"title":{},"body":{"modules/ArticleModule.html":{},"modules/MetaModule.html":{}}}],["schema/users.schema",{"_index":599,"title":{},"body":{"modules/UserModule.html":{}}}],["schemafactory",{"_index":157,"title":{},"body":{"classes/Article.html":{},"classes/Meta.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(article",{"_index":169,"title":{},"body":{"classes/Article.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(meta",{"_index":476,"title":{},"body":{"classes/Meta.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":566,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["set",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["settings",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["signoptions",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip((pagecurrent",{"_index":301,"title":{},"body":{"injectables/ArticleService.html":{}}}],["sort",{"_index":474,"title":{},"body":{"classes/Meta.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"classes/userDTO.html":{}}}],["src/.../app.config.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.model.ts",{"_index":710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../article.schema.ts",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.config.ts",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cryptogram.ts",{"_index":709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../meta.schema.ts",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.schema.ts",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":132,"title":{},"body":{"injectables/AppService.html":{}}}],["src/filters/http",{"_index":405,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/interceptor/transform.interceptor.ts",{"_index":540,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/transform.interceptor.ts:15",{"_index":556,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/interface/article.interface",{"_index":214,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/interface/article.interface.ts",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["src/interface/pagination.interface.ts",{"_index":539,"title":{},"body":{"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/interface/user.interface.ts",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["src/main.ts",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/article/article.controller.ts",{"_index":171,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/module/article/article.controller.ts:25",{"_index":191,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/module/article/article.controller.ts:37",{"_index":195,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/module/article/article.controller.ts:46",{"_index":182,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/module/article/article.controller.ts:56",{"_index":198,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/module/article/article.controller.ts:67",{"_index":187,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/module/article/article.dto.ts",{"_index":6,"title":{},"body":{"classes/AddArticleDTO.html":{},"coverage.html":{}}}],["src/module/article/article.dto.ts:20",{"_index":36,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["src/module/article/article.dto.ts:28",{"_index":29,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["src/module/article/article.dto.ts:37",{"_index":31,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["src/module/article/article.dto.ts:42",{"_index":23,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["src/module/article/article.dto.ts:47",{"_index":32,"title":{},"body":{"classes/AddArticleDTO.html":{}}}],["src/module/article/article.model.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/article/article.module.ts",{"_index":247,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/module/article/article.service.ts",{"_index":262,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/module/article/article.service.ts:17",{"_index":270,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:24",{"_index":281,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:30",{"_index":286,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:45",{"_index":284,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:50",{"_index":273,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:64",{"_index":289,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/article/article.service.ts:72",{"_index":277,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/module/auth/auth.config.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/auth/auth.module.ts",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/module/auth/auth.service.ts",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/module/auth/auth.service.ts:15",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/module/auth/auth.service.ts:21",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/module/auth/auth.service.ts:23",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/module/auth/auth.service.ts:28",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/module/auth/auth.service.ts:58",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/module/auth/jwt.strategy.ts",{"_index":438,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/module/auth/jwt.strategy.ts:16",{"_index":441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/module/auth/jwt.strategy.ts:26",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/module/auth/local.strategy.ts",{"_index":463,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/module/auth/local.strategy.ts:15",{"_index":464,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/module/auth/local.strategy.ts:20",{"_index":466,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/module/meta/meta.controller.ts",{"_index":478,"title":{},"body":{"controllers/MetaController.html":{},"coverage.html":{}}}],["src/module/meta/meta.controller.ts:22",{"_index":495,"title":{},"body":{"controllers/MetaController.html":{}}}],["src/module/meta/meta.controller.ts:30",{"_index":485,"title":{},"body":{"controllers/MetaController.html":{}}}],["src/module/meta/meta.controller.ts:36",{"_index":491,"title":{},"body":{"controllers/MetaController.html":{}}}],["src/module/meta/meta.controller.ts:44",{"_index":488,"title":{},"body":{"controllers/MetaController.html":{}}}],["src/module/meta/meta.dto.ts",{"_index":54,"title":{},"body":{"classes/AddMetaDTO.html":{},"coverage.html":{}}}],["src/module/meta/meta.dto.ts:14",{"_index":58,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["src/module/meta/meta.dto.ts:17",{"_index":57,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["src/module/meta/meta.dto.ts:20",{"_index":61,"title":{},"body":{"classes/AddMetaDTO.html":{}}}],["src/module/meta/meta.module.ts",{"_index":515,"title":{},"body":{"modules/MetaModule.html":{}}}],["src/module/meta/meta.service.ts",{"_index":520,"title":{},"body":{"injectables/MetaService.html":{},"coverage.html":{}}}],["src/module/meta/meta.service.ts:15",{"_index":523,"title":{},"body":{"injectables/MetaService.html":{}}}],["src/module/meta/meta.service.ts:18",{"_index":530,"title":{},"body":{"injectables/MetaService.html":{}}}],["src/module/meta/meta.service.ts:23",{"_index":524,"title":{},"body":{"injectables/MetaService.html":{}}}],["src/module/meta/meta.service.ts:33",{"_index":528,"title":{},"body":{"injectables/MetaService.html":{}}}],["src/module/meta/meta.service.ts:40",{"_index":526,"title":{},"body":{"injectables/MetaService.html":{}}}],["src/module/user/user.controller.ts",{"_index":567,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/module/user/user.controller.ts:24",{"_index":577,"title":{},"body":{"controllers/UserController.html":{}}}],["src/module/user/user.controller.ts:29",{"_index":572,"title":{},"body":{"controllers/UserController.html":{}}}],["src/module/user/user.dto.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"classes/userDTO.html":{}}}],["src/module/user/user.dto.ts:14",{"_index":776,"title":{},"body":{"classes/userDTO.html":{}}}],["src/module/user/user.dto.ts:18",{"_index":778,"title":{},"body":{"classes/userDTO.html":{}}}],["src/module/user/user.dto.ts:22",{"_index":773,"title":{},"body":{"classes/userDTO.html":{}}}],["src/module/user/user.module.ts",{"_index":594,"title":{},"body":{"modules/UserModule.html":{}}}],["src/module/user/user.service.ts",{"_index":601,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/module/user/user.service.ts:15",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["src/module/user/user.service.ts:23",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["src/module/user/user.service.ts:36",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/pipe/validation.pipe.ts",{"_index":620,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/pipe/validation.pipe.ts:17",{"_index":628,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/pipe/validation.pipe.ts:34",{"_index":624,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/schema/article.schema.ts",{"_index":137,"title":{},"body":{"classes/Article.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schema/article.schema.ts:17",{"_index":152,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:20",{"_index":148,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:23",{"_index":144,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:26",{"_index":149,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:29",{"_index":142,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:32",{"_index":154,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:35",{"_index":153,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:38",{"_index":150,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:47",{"_index":147,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/article.schema.ts:53",{"_index":151,"title":{},"body":{"classes/Article.html":{}}}],["src/schema/meta.schema.ts",{"_index":469,"title":{},"body":{"classes/Meta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schema/meta.schema.ts:21",{"_index":473,"title":{},"body":{"classes/Meta.html":{}}}],["src/schema/meta.schema.ts:24",{"_index":472,"title":{},"body":{"classes/Meta.html":{}}}],["src/schema/meta.schema.ts:27",{"_index":470,"title":{},"body":{"classes/Meta.html":{}}}],["src/schema/meta.schema.ts:30",{"_index":471,"title":{},"body":{"classes/Meta.html":{}}}],["src/schema/users.schema.ts",{"_index":557,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schema/users.schema.ts:15",{"_index":562,"title":{},"body":{"classes/User.html":{}}}],["src/schema/users.schema.ts:18",{"_index":563,"title":{},"body":{"classes/User.html":{}}}],["src/schema/users.schema.ts:21",{"_index":560,"title":{},"body":{"classes/User.html":{}}}],["src/schema/users.schema.ts:24",{"_index":561,"title":{},"body":{"classes/User.html":{}}}],["src/schema/users.schema.ts:27",{"_index":564,"title":{},"body":{"classes/User.html":{}}}],["src/utils/cryptogram.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start:devproduction",{"_index":731,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":732,"title":{},"body":{"index.html":{}}}],["started",{"_index":716,"title":{"index.html":{}},"body":{}}],["startwatch",{"_index":729,"title":{},"body":{"index.html":{}}}],["statements",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["step",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["strategy",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"classes/userDTO.html":{}}}],["success",{"_index":310,"title":{},"body":{"injectables/ArticleService.html":{}}}],["super",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":765,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":766,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":541,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["tag_id",{"_index":14,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{}}}],["tag_id：标签id",{"_index":751,"title":{},"body":{"index.html":{}}}],["tag，category",{"_index":759,"title":{},"body":{"index.html":{}}}],["test:covapi",{"_index":737,"title":{},"body":{"index.html":{}}}],["test:e2etest",{"_index":736,"title":{},"body":{"index.html":{}}}],["teste2e",{"_index":735,"title":{},"body":{"index.html":{}}}],["tests",{"_index":734,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlemodel",{"_index":318,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlemodel.countdocuments",{"_index":316,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlemodel.find",{"_index":299,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlemodel.findoneandupdate",{"_index":304,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlemodel.updateone",{"_index":324,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlemodel.updateone(params",{"_index":321,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articleservice.adddata(body",{"_index":237,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.deletearticle(param.id",{"_index":244,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall(queryinfo",{"_index":227,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findcount",{"_index":229,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone(param._id",{"_index":233,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.updatearticle",{"_index":239,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.authservice.validateuser",{"_index":588,"title":{},"body":{"controllers/UserController.html":{}}}],["this.authservice.validateuser(name",{"_index":468,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.validateuser(payload.name",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.certificate",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone(name",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign(payload",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.metamodel",{"_index":533,"title":{},"body":{"injectables/MetaService.html":{}}}],["this.metamodel.deleteone",{"_index":534,"title":{},"body":{"injectables/MetaService.html":{}}}],["this.metamodel.find",{"_index":532,"title":{},"body":{"injectables/MetaService.html":{}}}],["this.metamodel.findoneandupdate",{"_index":536,"title":{},"body":{"injectables/MetaService.html":{}}}],["this.metaservice.addmeta(body",{"_index":506,"title":{},"body":{"controllers/MetaController.html":{}}}],["this.metaservice.changemeta(param._id",{"_index":512,"title":{},"body":{"controllers/MetaController.html":{}}}],["this.metaservice.deletemeta(param._id",{"_index":509,"title":{},"body":{"controllers/MetaController.html":{}}}],["this.metaservice.getmeta(param.type",{"_index":504,"title":{},"body":{"controllers/MetaController.html":{}}}],["this.tovalidate(metatype",{"_index":635,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.usermodule(data).save",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodule.find",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.registeruser(body",{"_index":586,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findone(name",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":314,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{},"index.html":{}}}],["token",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["total",{"_index":228,"title":{},"body":{"controllers/ArticleController.html":{}}}],["tovalidate",{"_index":621,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":623,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":622,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":626,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":632,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":549,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"injectables/JwtStrategy.html":{}}}],["try",{"_index":303,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Meta.html":{},"controllers/MetaController.html":{},"injectables/MetaService.html":{},"interfaces/Pagination.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"index.html":{},"classes/userDTO.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":645,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":646,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":723,"title":{},"body":{"index.html":{}}}],["ui",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":21,"title":{},"body":{"classes/AddArticleDTO.html":{},"controllers/ArticleController.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":733,"title":{},"body":{"index.html":{}}}],["update_time",{"_index":47,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/Article.html":{},"injectables/ArticleService.html":{},"index.html":{},"classes/userDTO.html":{}}}],["updatearticle",{"_index":178,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["updatearticle(param",{"_index":196,"title":{},"body":{"controllers/ArticleController.html":{}}}],["updatearticle(params",{"_index":287,"title":{},"body":{"injectables/ArticleService.html":{}}}],["uri",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":427,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":306,"title":{},"body":{"injectables/ArticleService.html":{}}}],["useguards",{"_index":207,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{}}}],["useguards(authguard('jwt",{"_index":234,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{}}}],["useguards(undefined)@delete(':_id')@apibearerauth",{"_index":490,"title":{},"body":{"controllers/MetaController.html":{}}}],["useguards(undefined)@delete(':id')@apibearerauth",{"_index":186,"title":{},"body":{"controllers/ArticleController.html":{}}}],["useguards(undefined)@usepipes(new",{"_index":180,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{}}}],["usenewurlparser",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":208,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":235,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":109,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.controller",{"_index":598,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":583,"title":{},"body":{"controllers/UserController.html":{}}}],["user.length",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":581,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["user[0",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["user[0].passwd",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["user[0].salt",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":96,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":575,"title":{"classes/userDTO.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"classes/userDTO.html":{}}}],["usermodule",{"_index":91,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":600,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["userschema",{"_index":565,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":363,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/cryptogram",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["utils/log4js",{"_index":633,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate",{"_index":439,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(name",{"_index":465,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(object",{"_index":639,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatepasswd",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswd(encryptionpassword",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(name",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":215,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/ArticleController.html":{},"controllers/MetaController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipe())@post",{"_index":576,"title":{},"body":{"controllers/UserController.html":{}}}],["validationpipe())@post()@apibearerauth",{"_index":484,"title":{},"body":{"controllers/MetaController.html":{}}}],["validationpipe())@post()@apibearerauth()@apibody({type",{"_index":181,"title":{},"body":{"controllers/ArticleController.html":{}}}],["validationpipe())@put(':_id')@apibearerauth",{"_index":487,"title":{},"body":{"controllers/MetaController.html":{}}}],["validationpipe())@put(':id')@apibearerauth()@apibody({type",{"_index":197,"title":{},"body":{"controllers/ArticleController.html":{}}}],["validator",{"_index":40,"title":{},"body":{"classes/AddArticleDTO.html":{},"classes/AddMetaDTO.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{},"classes/userDTO.html":{}}}],["value",{"_index":282,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":781,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["views",{"_index":140,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"index.html":{}}}],["void",{"_index":414,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["vue3",{"_index":725,"title":{},"body":{"index.html":{}}}],["website",{"_index":252,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{}}}],["world",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["wumao",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/MetaController.html":{},"modules/MetaModule.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":283,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/MetaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddArticleDTO.html":{"url":"classes/AddArticleDTO.html","title":"class - AddArticleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddArticleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                category_id\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Readonly\n                                desc\n                            \n                            \n                                    Readonly\n                                    Optional\n                                tag_id\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            category_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/article.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '内容不能为空'})@ApiProperty({description: '内容', minimum: 1, default: '测试内容'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/article.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '描述内容', minimum: 0, default: '我是描述'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/article.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            tag_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/article.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '标题不能为空'})@MaxLength(20, {message: '标题长度不能超过20'})@ApiProperty({description: '标题', minimum: 1, default: '测试标题'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/article.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nexport class AddArticleDTO {\n  @IsNotEmpty({ message: '标题不能为空' })\n  @MaxLength(20, { message: '标题长度不能超过20', })\n  @ApiProperty({\n    description: '标题',\n    minimum: 1,\n    default: '测试标题',\n  })\n  readonly title: string;\n\n  @IsNotEmpty({ message: '内容不能为空' })\n  @ApiProperty({\n    description: '内容',\n    minimum: 1,\n    default: '测试内容',\n  })\n  readonly content: string;\n  // readonly add_time: string;\n  // readonly update_time: string;\n  // @ApiProperty()\n  @ApiProperty({\n    description: '描述内容',\n    minimum: 0,\n    default: '我是描述',\n  })\n  readonly desc: string;\n\n  // @IsArray()\n  // @ArrayUnique()\n  @ApiProperty({ type: [String] })\n  readonly category_id?: string[];\n\n  // @IsArray()\n  // @ArrayUnique()\n  @ApiProperty({ type: [String] })\n  readonly tag_id?: string[];\n\n  // readonly tag_id: string[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMetaDTO.html":{"url":"classes/AddMetaDTO.html","title":"class - AddMetaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMetaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/meta/meta.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alias\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '别名不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/meta/meta.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '名儿不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/meta/meta.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/meta/meta.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsIn } from 'class-validator';\n\nexport class AddMetaDTO {\n  @IsNotEmpty({ message: '名儿不能为空' })\n  readonly name: string\n\n  @IsNotEmpty({ message: '别名不能为空' })\n  readonly alias: string\n\n  @IsIn([1, 2])\n  readonly type: number\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMetaModule\n\nMetaModule\n\nAppModule -->\n\nMetaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            MetaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2021-01-02 10:59:57\n * @LastEditTime: 2021-01-04 21:35:40\n * @LastEditors: wumao\n * @Description: In User Settings Edit\n * @FilePath: /nest-blog/src/app.module.ts\n */\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MONGO_DB } from './app.config';\nimport { ArticleModule } from './module/article/article.module';\nimport { UserModule } from './module/user/user.module';\nimport { AuthModule } from './module/auth/auth.module';\nimport { UserController } from './module/user/user.controller'\nimport { MetaModule } from './module/meta/meta.module';\n\n@Module({  \n  imports: [\n    MongooseModule.forRoot(MONGO_DB.url, {\n      useNewUrlParser: true,\n    }),\n    ArticleModule,\n    UserModule,\n    AuthModule,\n    MetaModule,\n  ],\n  controllers: [AppController, UserController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/article.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                add_time\n                            \n                            \n                                author_id\n                            \n                            \n                                category_id\n                            \n                            \n                                content\n                            \n                            \n                                desc\n                            \n                            \n                                hidden\n                            \n                            \n                                tag_id\n                            \n                            \n                                title\n                            \n                            \n                                update_time\n                            \n                            \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(Number)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meta[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(Number)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meta[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(Number)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/article.schema.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Meta } from './meta.schema'\n\n\n@Schema()\nexport class Article {\n  @Prop(String)\n  title: string;\n\n  @Prop(String)\n  content: string;\n\n  @Prop(String)\n  author_id: string;\n\n  @Prop(String)\n  desc: string\n\n  @Prop(Number)\n  add_time: number;\n\n  @Prop(Number)\n  views: number;\n\n  @Prop(String)\n  update_time: number;\n\n  @Prop(Number)\n  hidden: number;\n\n  // @Prop(Array)\n  // category_id: array;\n\n  @Prop([{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Meta'\n  }])\n  category_id: Meta[];\n\n  @Prop([{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Meta'\n  }])\n  tag_id: Meta[];\n\n  // 文章分类\n  // @IsArray()\n  // @ArrayNotEmpty({ message: '文章分类？' })\n  // @ArrayUnique()\n  // @prop({ ref: () => Category, required: true, index: true })\n  // category: Ref[];\n\n\n\n\n}\n\nexport const ArticleSchema = SchemaFactory.createForClass(Article);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addArticle\n                            \n                            \n                                deleteArticle\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                readArticle\n                            \n                            \n                                    Async\n                                updateArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addArticle\n                        \n                        \n                    \n                \n            \n            \n                \naddArticle(body: AddArticleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@UsePipes(new ValidationPipe())@Post()@ApiBearerAuth()@ApiBody({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteArticle\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteArticle(Param: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Delete(':id')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(queryInfo: Pagination)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryInfo\n                                    \n                                                Pagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readArticle\n                        \n                        \n                    \n                \n            \n            \n                \nreadArticle(param: Article)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id')\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                Article\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticle(param: any, body: AddArticleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@UsePipes(new ValidationPipe())@Put(':id')@ApiBearerAuth()@ApiBody({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2021-01-02 12:05:04\n * @LastEditTime: 2021-01-06 02:22:36\n * @LastEditors: wumao\n * @Description: In User Settings Edit\n * @FilePath: /nest-blog/src/module/article/article.controller.ts\n */\nimport { Body, Controller, Delete, Get, Param, Post, Put, Query, UseGuards, UsePipes } from '@nestjs/common';\nimport { ArticleService } from './article.service'\nimport { AuthGuard } from '@nestjs/passport';\nimport { Pagination } from '../../interface/pagination.interface'\nimport { Article } from 'src/interface/article.interface';\nimport { ValidationPipe } from '../../pipe/validation.pipe';\nimport { AddArticleDTO } from './article.dto';\nimport { ApiBody, ApiBearerAuth } from '@nestjs/swagger'\n\n\n@Controller('article')\nexport class ArticleController {\n  constructor(private ArticleService: ArticleService) { }\n\n  //文章列表以及分页\n  @Get()\n  async list(@Query() queryInfo: Pagination) {\n    const { pageCurrent = 1, pageSize = 10 } = queryInfo\n    const articleList = await this.ArticleService.findAll(queryInfo)\n    const total = await this.ArticleService.findCount()\n    return {\n      items: articleList,\n      pageInfo: { total, pageCurrent: +pageCurrent, pageSize: +pageSize }\n    }\n  }\n\n  //读文章\n  @Get(':_id')\n  readArticle(@Param() param: Article) {\n    return this.ArticleService.findOne(param._id)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @UsePipes(new ValidationPipe())\n  @Post()\n  @ApiBearerAuth()\n  @ApiBody({ type: [AddArticleDTO] })\n  addArticle(@Body() body: AddArticleDTO) {\n    return this.ArticleService.addData(body)\n  }\n\n  //修改\n  @UseGuards(AuthGuard('jwt'))\n  @UsePipes(new ValidationPipe())\n  @Put(':id')\n  @ApiBearerAuth()\n  @ApiBody({ type: [AddArticleDTO] })\n  async updateArticle(\n    @Param() param: any,\n    @Body() body: AddArticleDTO\n  ) {\n    const result = await this.ArticleService.updateArticle({ _id: param.id }, body)\n    return result\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Delete(':id')\n  @ApiBearerAuth()\n  deleteArticle(@Param() Param: any) {\n    return this.ArticleService.deleteArticle(Param.id)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nArticleService\n\nArticleService\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: wumao\n * @Date: 2021-01-02 12:04:38\n * @LastEditTime: 2021-01-05 13:50:05\n * @LastEditors: wumao\n * @Description:\n * @FilePath: /nest-blog/src/module/article/article.module.ts\n * @website: https://www.wumao.org\n */\nimport { Module } from '@nestjs/common';\nimport { ArticleController } from './article.controller';\n\n//配置数据库模型\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { ArticleSchema } from '../../schema/article.schema'\nimport { MetaSchema } from '../../schema/meta.schema'\nimport { ArticleService } from './article.service';\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n    {\n      name: 'Article',\n      schema: ArticleSchema,\n      collection: 'articles',\n    }\n    ]),\n    MongooseModule.forFeature([\n      {\n        name: 'Meta',\n        schema: MetaSchema,\n        collection: 'metas',\n      }\n    ])\n  ],\n  controllers: [ArticleController],\n  providers: [ArticleService],\n})\nexport class ArticleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addData\n                            \n                            \n                                    Async\n                                deleteArticle\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findCount\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ArticleModel, MetaModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/article/article.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ArticleModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        MetaModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addData(params: Article)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Article\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteArticle(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params: Pagination, fields?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Pagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    fields\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCount()\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticle(params: Article, params2: Article)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Article\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params2\n                                    \n                                                Article\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotAcceptableException, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Article } from '../../interface/article.interface'\nimport { Pagination } from '../../interface/pagination.interface'\nimport { getDefaultOptions } from './article.model'\n\n@Injectable()\nexport class ArticleService {\n  constructor(\n    @InjectModel('Article') private ArticleModel\n    , @InjectModel('Meta') private MetaModel\n  ) { }\n\n  //查询列表带分页\n  async findAll(params: Pagination = {}, fields?: string): Promise {\n    const { pageSize = 10, pageCurrent = 1 } = params\n    return await this.ArticleModel.find({}, fields).sort({ _id: -1 }).skip((pageCurrent - 1) * pageSize).limit(+pageSize)\n  }\n\n  //查找文章\n  async findOne(id: string): Promise {\n    try {\n      const article = await this.ArticleModel.findOneAndUpdate({ _id: id, hidden: 0 }, { $inc: { views: 1 } }, { useFindAndModify: false }).populate('category_id').populate('tag_id')\n      return {\n        msg: 'success',\n        data: article\n      }\n    } catch (error) {\n      throw new NotFoundException({\n        message: '找不到这篇文章'\n      });\n    }\n  }\n\n  //查询文章数量\n  async findCount(): Promise {\n    return await this.ArticleModel.countDocuments()\n  }\n\n  //增加数据\n  async addData(params: Article): Promise {\n    const data = { ...params, ...getDefaultOptions() }\n    console.log(data);\n\n    try {\n      await this.ArticleModel({ ...params, ...getDefaultOptions() }).save()\n      return { msg: \"添加成功\" }\n    } catch (error) {\n      throw new NotAcceptableException({ message: error.message });\n\n    }\n  }\n\n  //修改数据\n  async updateArticle(params: Article, params2: Article): Promise {\n    await this.ArticleModel.updateOne(params, { ...params2, update_time: Date.now() })\n    return {\n      msg: '恭喜您,修改成功'\n    }\n  }\n\n  //删除数据\n  async deleteArticle(id: string): Promise {\n    const data = { _id: id }\n    console.log(22);\n    console.log(data);\n\n    const result = await this.ArticleModel.updateOne({ _id: id }, { hidden: 1 })\n    console.log(result);\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2021-01-02 23:03:44\n * @LastEditTime: 2021-01-03 19:18:50\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /nest-blog/src/module/auth/auth.module.ts\n */\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '../user/user.module';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JWT_CONFIG } from '../../app.config';\n``\n\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: JWT_CONFIG.secret,\n      signOptions: { expiresIn: '30d' }, // token 过期时效\n    }),\n    UserModule,\n  ],\n  providers: [JwtStrategy, LocalStrategy, AuthService],\n  exports: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                明文\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                certificate\n                            \n                            \n                                validatePasswd\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/module/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            certificate\n                        \n                        \n                    \n                \n            \n            \n                \ncertificate(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { token: any; msg: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePasswd\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePasswd(encryptionPassword: string, plainTextPassword: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(name: string, passwd: string, JwtStrategy?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/module/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    JwtStrategy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            明文\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/module/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { encryptPassword } from '../../utils/cryptogram';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UserService,\n    private readonly jwtService: JwtService,\n  ) { }\n\n  明文\n  //校验密码是否相等\n  validatePasswd(encryptionPassword: string, plainTextPassword: string, salt: string) {\n    return encryptionPassword === encryptPassword(plainTextPassword, salt)\n  }\n\n  //校验用户\n  async validateUser(name: string, passwd: string, JwtStrategy?: boolean): Promise {\n    console.log('JWT验证 - Step 2: 校验用户信息');\n    const user = await this.usersService.findOne(name);\n    if (user.length === 1) {\n      const hashedPassword = user[0].passwd;\n      const salt = user[0].salt;\n      // 通过密码盐，加密传参，再与数据库里的比较，判断是否相等\n      const hashPassword = encryptPassword(passwd, salt);\n      if (hashedPassword === hashPassword) {\n        // 密码正确\n        if (JwtStrategy) {\n          return user[0]\n        }\n        return this.certificate({ name, passwd });\n      } else {\n        // 密码错误\n        throw new HttpException({\n          message: '小伙子,密码有问题啊',\n          status: HttpStatus.FORBIDDEN\n        }, 403)\n      }\n    }\n    // 查无此人\n    throw new HttpException({\n      message: '小伙子,名字写错了吧?',\n      status: HttpStatus.FORBIDDEN\n    }, 403)\n  }\n\n  // JWT验证 - 颁发证书\n  certificate(params: any) {\n    const payload = {\n      name: params.name,\n      passwd: params.passwd,\n    };\n    console.log('JWT验证 - Step 3: 处理 jwt 签证');\n    try {\n      const token = this.jwtService.sign(payload);\n      return {\n        token,\n        msg: `恭喜您,登录成功`,\n      };\n    } catch (error) {\n      throw new HttpException({\n        message: '服务器错误',\n        status: HttpStatus.FORBIDDEN\n      }, 403)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/http-exception.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const message = exception.message;\n    Logger.log('错误提示', message);\n    const errorResponse = {\n      // data: {\n      //   error: message,\n      // }, \n      msg: message,\n      code: 0, // 自定义code\n      url: request.originalUrl, // 错误的url地址\n    };\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n    // 设置返回的状态码、请求头、发送错误信息\n    response.status(status);\n    response.header('Content-Type', 'application/json; charset=utf-8');\n    response.send(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AuthService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/module/auth/jwt.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/auth/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JWT_CONFIG } from '../../app.config';\nimport { AuthService } from './auth.service.js'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private AuthService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: JWT_CONFIG.secret,\n    });\n  }\n\n  // JWT验证 - Step 4: 被守卫调用\n  async validate(payload: any) {\n    console.log(11);\n\n    console.log(payload);\n\n    const user = await this.AuthService.validateUser(payload.name, payload.passwd, true);\n    console.log(user);\n\n    if (!user) {\n      throw new UnauthorizedException({\n        message: '没有权限'\n      });\n    }\n    return payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/module/auth/local.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(name: string, passwd: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/auth/local.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(name: string, passwd: string): Promise {\n    const user = await this.authService.validateUser(name, passwd);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Meta.html":{"url":"classes/Meta.html","title":"class - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/meta.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                desc\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/meta.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/meta.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/meta.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(Number)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/meta.schema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n\n@Schema()\nexport class Meta {\n  // @Prop()\n  // sort: number\n\n  //1是tag，2是category\n  @Prop(Number)\n  type: number;\n\n  @Prop(String)\n  name: string;\n\n  @Prop(String)\n  alias?: string;\n\n  @Prop(String)\n  desc: string;\n}\n\nexport const MetaSchema = SchemaFactory.createForClass(Meta);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MetaController.html":{"url":"controllers/MetaController.html","title":"controller - MetaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MetaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/meta/meta.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meta\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMeta\n                            \n                            \n                                changeMeta\n                            \n                            \n                                deleteMeta\n                            \n                            \n                                getMta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMeta\n                        \n                        \n                    \n                \n            \n            \n                \naddMeta(body: AddMetaDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@UsePipes(new ValidationPipe())@Post()@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/module/meta/meta.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddMetaDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeMeta\n                        \n                        \n                    \n                \n            \n            \n                \nchangeMeta(param: any, body: AddMetaDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@UsePipes(new ValidationPipe())@Put(':_id')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/module/meta/meta.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddMetaDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMeta\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMeta(param: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Delete(':_id')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/module/meta/meta.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMta\n                        \n                        \n                    \n                \n            \n            \n                \ngetMta(param: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':type')\n                \n            \n\n            \n                \n                    Defined in src/module/meta/meta.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * @Author: wumao\n * @Date: 2021-01-04 16:54:00\n * @LastEditTime: 2021-01-06 02:23:12\n * @LastEditors: wumao\n * @Description:  \n * @FilePath: /nest-blog/src/module/meta/meta.controller.ts\n * @website: https://www.wumao.org\n */\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards, UsePipes } from '@nestjs/common';\nimport { MetaService } from './meta.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ValidationPipe } from '../../pipe/validation.pipe'\nimport { AddMetaDTO } from './meta.dto'\nimport { ApiBearerAuth } from '@nestjs/swagger'\n\n\n@Controller('meta')\nexport class MetaController {\n  constructor(private MetaService: MetaService) { }\n  @Get(':type')\n  getMta(@Param() param: { type: string }) {\n    return this.MetaService.getMeta(param.type)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @UsePipes(new ValidationPipe())\n  @Post()\n  @ApiBearerAuth()\n  addMeta(@Body() body: AddMetaDTO) {\n    return this.MetaService.addMeta(body)\n  }\n  @UseGuards(AuthGuard('jwt'))\n  @Delete(':_id')\n  @ApiBearerAuth()\n  deleteMeta(@Param() param: any) {\n    return this.MetaService.deleteMeta(param._id)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @UsePipes(new ValidationPipe())\n  @Put(':_id')\n  @ApiBearerAuth()\n  changeMeta(@Param() param: any, @Body() body: AddMetaDTO) {\n    return this.MetaService.changeMeta(param._id, body)\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MetaModule.html":{"url":"modules/MetaModule.html","title":"module - MetaModule","body":"\n                   \n\n\n\n\n    Modules\n    MetaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MetaModule\n\n\n\ncluster_MetaModule_providers\n\n\n\n\nMetaService\n\nMetaService\n\n\n\nMetaModule\n\nMetaModule\n\nMetaModule -->\n\nMetaService->MetaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/meta/meta.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MetaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MetaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: wumao\n * @Date: 2021-01-04 16:49:47\n * @LastEditTime: 2021-01-04 22:02:39\n * @LastEditors: wumao\n * @Description: \n * @FilePath: /nest-blog/src/module/meta/meta.module.ts\n * @website: https://www.wumao.org\n */\nimport { Module } from '@nestjs/common';\nimport { MetaController } from './meta.controller';\nimport { MetaService } from './meta.service';\nimport { MetaSchema } from '../../schema/meta.schema'\nimport { MongooseModule } from '@nestjs/mongoose'\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Meta',\n        schema: MetaSchema,\n        collection: 'metas',\n      }\n    ])],\n  controllers: [MetaController],\n  providers: [MetaService]\n})\nexport class MetaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetaService.html":{"url":"injectables/MetaService.html","title":"injectable - MetaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MetaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/meta/meta.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMeta\n                            \n                            \n                                    Async\n                                changeMeta\n                            \n                            \n                                    Async\n                                deleteMeta\n                            \n                            \n                                    Async\n                                getMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(MetaModel)\n                    \n                \n                        \n                            \n                                Defined in src/module/meta/meta.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        MetaModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMeta(body)\n                \n            \n\n\n            \n                \n                    Defined in src/module/meta/meta.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeMeta(_id: string, body)\n                \n            \n\n\n            \n                \n                    Defined in src/module/meta/meta.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMeta(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/meta/meta.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMeta(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/meta/meta.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose'\n\n\n@Injectable()\nexport class MetaService {\n  constructor(@InjectModel('Meta') private MetaModel) { }\n  //查所有\n  async getMeta(type: string): Promise {\n    return await this.MetaModel.find({ type: +type })\n  }\n\n  //增加单个标签\n  async addMeta(body) {\n    await this.MetaModel({\n      ...body\n    }).save()\n\n    return {\n      msg: '添加标签成功'\n    }\n  }\n\n  async deleteMeta(_id: string) {\n    const result = await this.MetaModel.deleteOne({ _id })\n    console.log(result);\n    if (result.deletedCount === 1) {\n      return { msg: '删除成功' }\n    }\n  }\n  async changeMeta(_id: string, body) {\n    await this.MetaModel.findOneAndUpdate({ _id }, body)\n    // console.log(result);\n    // if (result.deletedCount === 1) {\n    return { msg: '修改成功' }\n    // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pageCurrent\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageCurrent\n                                    \n                                \n                                \n                                    \n                                        pageCurrent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n  pageSize?: number;\n  pageCurrent?: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  CallHandler,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\ninterface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map(data => {\n        return {\n          data,\n          code: 1,\n          msg: '请求成功',\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/transform.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  CallHandler,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\ninterface Response {\n  data: T;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map(data => {\n        return {\n          data,\n          code: 1,\n          msg: '请求成功',\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/users.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                create_time\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                passwd\n                            \n                            \n                                salt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            create_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/users.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/users.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/users.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            passwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/users.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop(String)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schema/users.schema.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n\n@Schema()\nexport class User {\n  @Prop(String)\n  name: string;\n\n  @Prop(String)\n  passwd?: string;\n  \n  @Prop(String)\n  create_time?: string;\n\n  @Prop(String)\n  email?: string;\n\n  @Prop(String)\n  salt: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginInfo: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/module/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(body: userDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post()\n                \n            \n\n            \n                \n                    Defined in src/module/user/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                userDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2021-01-02 15:03:02\n * @LastEditTime: 2021-01-06 02:24:13\n * @LastEditors: wumao\n * @Description: In User Settings Edit\n * @FilePath: /nest-blog/src/module/user/user.controller.ts\n */\n\nimport { Body, Controller, Post, UsePipes } from '@nestjs/common';\nimport { UserService } from './user.service'\nimport { AuthService } from '../auth/auth.service';\nimport { ValidationPipe } from '../../pipe/validation.pipe'\nimport { userDTO } from './user.dto'\n@Controller('user')\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private authService: AuthService\n  ) { }\n\n  @UsePipes(new ValidationPipe())\n  @Post()\n  register(@Body() body: userDTO) {\n    return this.userService.registerUser(body)\n  }\n\n  @Post('/login')\n  async login(@Body() loginInfo: any) {\n    console.log('JWT验证 - Step 1: 用户请求登录');\n    return await this.authService.validateUser(\n      loginInfo.name,\n      loginInfo.passwd,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2021-01-02 15:02:43\n * @LastEditTime: 2021-01-03 01:21:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /nest-blog/src/module/user/user.module.ts\n */\nimport { Module } from '@nestjs/common';\n// import { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { UserSchema } from '../../schema/users.schema'\nimport { MongooseModule } from '@nestjs/mongoose'\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    {\n      name: 'User',\n      schema: UserSchema,\n      collection: 'users',\n    }\n  ])],\n  // controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModule)\n                    \n                \n                        \n                            \n                                Defined in src/module/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModule\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(requestBody: User)\n                \n            \n\n\n            \n                \n                    Defined in src/module/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestBody\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../../interface/user.interface'\nimport { makeSalt, encryptPassword } from '../../utils/cryptogram'\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('User') private userModule) { }\n\n  /**\n  * @description: 查找是否有这个人\n  * @param {*}\n  * @return {*}\n  */\n  findOne(name: string): Promise {\n    try {\n      return this.userModule.find({ name })\n    } catch (error) {\n      return void 0;\n    }\n  }\n\n  /**\n   * @description: 注册用户\n   * @param {*}\n   * @return {*}\n   */\n  async registerUser(requestBody: User): Promise {\n    const { name, passwd, email } = requestBody\n    // 不能有相同用户名\n    const sameInfo = await this.findOne(name)\n    if (sameInfo.length) {\n      throw new HttpException({\n        message: '用户名重复',\n        status: HttpStatus.FORBIDDEN\n      }, 403)\n    }\n    const salt = makeSalt(); // 制作密码盐\n    const hashPasswd = encryptPassword(passwd, salt);  // 加密密码\n    const data = {\n      name,\n      passwd: hashPasswd,\n      email,\n      salt,\n      create_time: Date.now().toString()\n    }\n    console.log(data);\n\n    try {\n      await this.userModule(data).save();\n      return { msg: '注册用户成功' }\n    } catch (error) {\n      throw new HttpException({\n        message: '服务器错误',\n        status: HttpStatus.FORBIDDEN\n      }, 403)\n    }\n\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipe/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pipe/validation.pipe.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipe/validation.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n// import { Logger } from '../utils/log4js';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    console.log(`value:`, value, 'metatype: ', metatype);\n    if (!metatype || !this.toValidate(metatype)) {\n      // 如果没有传入验证规则，则不验证，直接返回数据\n      return value;\n    }\n    // 将对象转换为 Class 来验证\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      // 取出第一个提示\n      const msg = Object.values(errors[0].constraints)[0];\n      // Logger.error(`Validation failed: ${msg}`);\n      throw new BadRequestException(`Validation failed: ${msg}`);\n    }\n    return value;\n  }\n  private toValidate(metatype: any): boolean {\n    const types: any[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            CONFIG_G\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            JWT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            MONGO_DB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interface/article.interface.ts\n            \n            interface\n            Article\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interface/pagination.interface.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interface/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/article/article.dto.ts\n            \n            class\n            AddArticleDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/article/article.model.ts\n            \n            function\n            getDefaultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/module/auth/auth.config.ts\n            \n            variable\n            JWTConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/module/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/module/meta/meta.controller.ts\n            \n            controller\n            MetaController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/meta/meta.dto.ts\n            \n            class\n            AddMetaDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/meta/meta.service.ts\n            \n            injectable\n            MetaService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/module/user/user.dto.ts\n            \n            class\n            userDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pipe/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/schema/article.schema.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/schema/article.schema.ts\n            \n            variable\n            ArticleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/meta.schema.ts\n            \n            class\n            Meta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/schema/meta.schema.ts\n            \n            variable\n            MetaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/users.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/users.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            encryptPassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            makeSalt\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.9\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            helmet : ^4.3.1\n        \n            lodash : ^4.17.20\n        \n            mongoose : ^5.11.9\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            encryptPassword   (src/.../cryptogram.ts)\n                        \n                        \n                            getDefaultOptions   (src/.../article.model.ts)\n                        \n                        \n                            makeSalt   (src/.../cryptogram.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/cryptogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            encryptPassword\n                        \n                        \n                    \n                \n            \n            \n                \nencryptPassword(password, salt)\n                \n            \n\n\n\n\n            \n                \n                    Encrypt password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码\n\n                                    \n                                \n                                \n                                    salt\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码盐\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeSalt\n                        \n                        \n                    \n                \n            \n            \n                \nmakeSalt()\n                \n            \n\n\n\n\n            \n                \n                    Make salt\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    src/module/article/article.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getDefaultOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetDefaultOptions()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n介绍\n\n这是一个由nodejs搭建的博客系统,不断完善中,部分数据库设计借鉴php程序typecho,在一步一步完善中...\n\nTO DO LIST\n\n 用户模块\n\n 用户注册\n 用户登录\n 用户权限认证\n 用户权限细分\n\n\n 认证模块\n\n 用户组权限控制\n 用户组新增\n 用户组关联到用户\n\n\n META模块(标签/分类)\n\n meta查看(根据type)\n META及分页查询\n META删除\n META修改\n\n\n 文章模块\n\n 文章查看\n 文章列表查询分页\n 文章新增\n 文章删除\n 文章修改\n 上传的数据进行用pipe做校验\n 文章自增id(目前用的是自带主键ID)\n 文章的type(以后用来区分相册,微博这种)\n 文章的标签,分类建成一个集,拿组件id关联到文章集合里面\n\n\n\n\n 评论模块\n\n这个在纠结到底用第三方模块还是使用自己的\n\n\n 文件存储\n\n这个准备接入阿里的oss存储+CDN,域名在备案中...\n\n\n 服务端日志系统\n\n 前端展示\n\n目前还没想到到底做什么样子的\n\n\n\n技术栈\n后端：nestjs + typescript + MongoDB\n前端：vue3 + typescript\n起步\n $ npm installdevelopment\n$ npm run startwatch mode\n$ npm run start:devproduction mode\n$ npm run start:prodTest\nunit tests\n$ npm run teste2e tests\n$ npm run test:e2etest coverage\n$ npm run test:covAPI DOCUMENT\n\n接口采用RESTful API设计规范\n\n文档说明\n\n有auth的接口表示需要token认证,token默认有效期为30天\n\n文章模块\n\n/article/\n\n\n@GET query({pageSize=10,pageCurrent=1}  ) 拉取文章列表\n@GET /param(_id:string) param 读取文章详情  \n@PUT /param(_id:string)   + body(article:Article) [auth] 修改文章详情\n@POST body(article:Article) [auth]  创建文章\n@Delete /param(_id:string)  [auth]  删除文章\n\n用户模块\n\n/user/\n\n\nPOST body({name:string,passwd:string}) 注册用户\nPOST param /login body({name:string,passwd:string}) 用户登录META模块\n\n\n\n/meta/\n\n\n根据RESTful风格的增删改查\n\nDATABASE DESCRIPTION\n集合\narticles：文章集合\n\n_id:文章id（默认主键）\ntitle：文章标题\ncontent：文章内容\nauthor_id:作者id\ndesc:文章描述\ncategory_id:文章分类id\ntag_id：标签id\ncreate_time:发布时间\nupdate_time:更新时间\nviews:查看次数\nhidden:是否隐藏(0是显示,默认是1隐藏)\n\ncommons：评论\n\n_id:评论id（默认主键）\nname：姓名\nemail：邮箱\ncontent：内容\ncreate_time:评论时间\nconnect_id:关联的文章id（外键）\n\nusers:用户\n\n_id:用户id（默认主键）\nname:用户名\npasswd：密码\ncreate_time:创建时间\nemail：邮箱（头像使用gravatar服务）\nsalt:盐，加密验证用的随机字符串\n\nclasses：分类以及标签\n\n_id:分类id（默认主键）\ntype: 类型（ tag，category 标签或者是分类）\ntitle：标题\ndesc：描述\n\nrelationships：关联表\n\n_id:ID（默认主键）\narticle_id:文章id\nclass_id:分类id\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MetaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MetaModule\n\n\n\ncluster_MetaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nMetaModule\n\nMetaModule\n\nAppModule -->\n\nMetaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMetaService\n\nMetaService\n\nMetaModule -->\n\nMetaService->MetaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userDTO.html":{"url":"classes/userDTO.html","title":"class - userDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/user/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                passwd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/user/user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(5, {message: '用户名不能小于过5位'})@MaxLength(20, {message: '用户名不能超过10位'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/user/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            passwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(5, {message: '密码不能小于过5位'})@MaxLength(10, {message: '密码不能超过10位'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/user/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MaxLength, MinLength, IsEmail, } from 'class-validator';\nexport class userDTO {\n  @MinLength(5, { message: '用户名不能小于过5位', })\n  @MaxLength(20, { message: '用户名不能超过10位', })\n  readonly name: string;\n\n  @MinLength(5, { message: '密码不能小于过5位', })\n  @MaxLength(10, { message: '密码不能超过10位', })\n  readonly passwd: string;\n  // readonly add_time: string;\n  // readonly update_time: string;\n  @IsEmail()\n  email: string;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArticleSchema   (src/.../article.schema.ts)\n                        \n                        \n                            CONFIG_G   (src/.../app.config.ts)\n                        \n                        \n                            JWT_CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            JWTConfig   (src/.../auth.config.ts)\n                        \n                        \n                            MetaSchema   (src/.../meta.schema.ts)\n                        \n                        \n                            MONGO_DB   (src/.../app.config.ts)\n                        \n                        \n                            UserSchema   (src/.../users.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schema/article.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ArticleSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Article)\n                        \n                    \n\n\n            \n        \n\n    src/app.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_G\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  PORT: 3000,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JWT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'wumao', // 秘钥\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_DB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  uri: `mongodb://127.0.0.1:27017/nestBlog`,\n  username: 'admin',\n  password: '123456',\n  url: 'mongodb://admin:123456@localhost:27017/nestBlog?authSource=admin',\n}\n                        \n                    \n\n\n            \n        \n\n    src/module/auth/auth.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JWTConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'wumao', // 秘钥\n}\n                        \n                    \n\n\n            \n        \n\n    src/schema/meta.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MetaSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Meta)\n                        \n                    \n\n\n            \n        \n\n    src/schema/users.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
